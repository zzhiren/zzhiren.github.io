import{_ as p,r as l,o as e,c as o,b as t,d as s,e as a,a as c}from"./app.09b4d0c2.js";const f=JSON.parse('{"title":"Getting Started","description":"","frontmatter":{},"headers":[{"level":2,"title":"Installation","slug":"installation","link":"#installation","children":[]},{"level":2,"title":"What is a Store?","slug":"what-is-a-store","link":"#what-is-a-store","children":[]},{"level":2,"title":"When should I use a Store","slug":"when-should-i-use-a-store","link":"#when-should-i-use-a-store","children":[]}],"relativePath":"getting-started.md"}'),r={name:"getting-started.md"},i=s("h1",{id:"getting-started",tabindex:"-1"},[a("Getting Started "),s("a",{class:"header-anchor",href:"#getting-started","aria-hidden":"true"},"#")],-1),y=s("h2",{id:"installation",tabindex:"-1"},[a("Installation "),s("a",{class:"header-anchor",href:"#installation","aria-hidden":"true"},"#")],-1),h=c(`<p>Install <code>pinia</code> with your favorite package manager:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">yarn </span><span style="color:#E7EE98;">add</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">pinia</span></span>
<span class="line"><span style="color:#7B7F8B;"># or with npm</span></span>
<span class="line"><span style="color:#F6F6F4;">npm </span><span style="color:#E7EE98;">install</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">pinia</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#59873A;">yarn</span><span style="color:#393A34;"> </span><span style="color:#B56959;">add</span><span style="color:#393A34;"> </span><span style="color:#B56959;">pinia</span></span>
<span class="line"><span style="color:#A0ADA0;"># or with npm</span></span>
<span class="line"><span style="color:#59873A;">npm</span><span style="color:#393A34;"> </span><span style="color:#B56959;">install</span><span style="color:#393A34;"> </span><span style="color:#B56959;">pinia</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>If your app is using Vue &lt;2.7, you also need to install the composition api: <code>@vue/composition-api</code>. If you are using Nuxt, you should follow <a href="/ssr/nuxt.html">these instructions</a>.</p></div><p>If you are using the Vue CLI, you can instead give this <a href="https://github.com/wobsoriano/vue-cli-plugin-pinia" target="_blank" rel="noreferrer"><strong>unofficial plugin</strong></a> a try.</p><p>Create a pinia instance (the root store) and pass it to the app as a plugin:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> { createApp } </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">vue</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line highlighted"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> { createPinia } </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">pinia</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> App </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">./App.vue</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> pinia </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">createPinia</span><span style="color:#F6F6F4;">()</span></span>
<span class="line highlighted"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> app </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">createApp</span><span style="color:#F6F6F4;">(App)</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#F6F6F4;">app.</span><span style="color:#62E884;">use</span><span style="color:#F6F6F4;">(pinia)</span></span>
<span class="line"><span style="color:#F6F6F4;">app.</span><span style="color:#62E884;">mount</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">#app</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">createApp</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">vue</span><span style="color:#B56959AA;">&#39;</span></span>
<span class="line highlighted"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">createPinia</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">pinia</span><span style="color:#B56959AA;">&#39;</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">App</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">./App.vue</span><span style="color:#B56959AA;">&#39;</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">pinia</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">createPinia</span><span style="color:#999999;">()</span></span>
<span class="line highlighted"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">app</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">createApp</span><span style="color:#999999;">(</span><span style="color:#B07D48;">App</span><span style="color:#999999;">)</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#B07D48;">app</span><span style="color:#999999;">.</span><span style="color:#59873A;">use</span><span style="color:#999999;">(</span><span style="color:#B07D48;">pinia</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#B07D48;">app</span><span style="color:#999999;">.</span><span style="color:#59873A;">mount</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">#app</span><span style="color:#B56959AA;">&#39;</span><span style="color:#999999;">)</span></span>
<span class="line"></span></code></pre></div><p>If you are using Vue 2, you also need to install a plugin and inject the created <code>pinia</code> at the root of the app:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft has-highlighted-lines vp-code-dark"><code><span class="line highlighted"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> { createPinia, PiniaVuePlugin } </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">pinia</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#F6F6F4;">Vue.</span><span style="color:#62E884;">use</span><span style="color:#F6F6F4;">(PiniaVuePlugin)</span></span>
<span class="line highlighted"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> pinia </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">createPinia</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Vue</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  el</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">#app</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// other options...</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// ...</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// note the same \`pinia\` instance can be used across multiple Vue apps on</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// the same page</span></span>
<span class="line highlighted"><span style="color:#F6F6F4;">  pinia,</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light has-highlighted-lines vp-code-light"><code><span class="line highlighted"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">createPinia</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">PiniaVuePlugin</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">pinia</span><span style="color:#B56959AA;">&#39;</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#B07D48;">Vue</span><span style="color:#999999;">.</span><span style="color:#59873A;">use</span><span style="color:#999999;">(</span><span style="color:#B07D48;">PiniaVuePlugin</span><span style="color:#999999;">)</span></span>
<span class="line highlighted"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">pinia</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">createPinia</span><span style="color:#999999;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">new</span><span style="color:#393A34;"> </span><span style="color:#59873A;">Vue</span><span style="color:#999999;">({</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">el</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">#app</span><span style="color:#B56959AA;">&#39;</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// other options...</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// ...</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// note the same \`pinia\` instance can be used across multiple Vue apps on</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// the same page</span></span>
<span class="line highlighted"><span style="color:#393A34;">  </span><span style="color:#B07D48;">pinia</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">})</span></span>
<span class="line"></span></code></pre></div><p>This will also add devtools support. In Vue 3, some features like time traveling and editing are still not supported because vue-devtools doesn&#39;t expose the necessary APIs yet but the devtools have way more features and the developer experience as a whole is far superior.</p><h2 id="what-is-a-store" tabindex="-1">What is a Store? <a class="header-anchor" href="#what-is-a-store" aria-hidden="true">#</a></h2><p>A Store (like Pinia) is an entity holding state and business logic that isn&#39;t bound to your Component tree. In other words, <strong>it hosts global state</strong>. It&#39;s a bit like a component that is always there and that everybody can read off and write to. It has <strong>three concepts</strong>, the <a href="./core-concepts/state.html">state</a>, <a href="./core-concepts/getters.html">getters</a> and <a href="./core-concepts/actions.html">actions</a> and it&#39;s safe to assume these concepts are the equivalent of <code>data</code>, <code>computed</code> and <code>methods</code> in components.</p><h2 id="when-should-i-use-a-store" tabindex="-1">When should I use a Store <a class="header-anchor" href="#when-should-i-use-a-store" aria-hidden="true">#</a></h2><p>A store should contain data that can be accessed throughout your application. This includes data that is used in many places, e.g. User information that is displayed in the navbar, as well as data that needs to be preserved through pages, e.g. a very complicated multi-step form.</p><p>On the other hand, you should avoid including in the store local data that could be hosted in a component instead, e.g. the visibility of an element local to a page.</p><p>Not all applications need access to a global state, but if yours need one, Pinia will make your life easier.</p>`,15);function d(F,u,g,A,E,m){const n=l("VueMasteryLogoLink");return e(),o("div",null,[i,y,t(n,{for:"pinia-cheat-sheet"}),h])}const v=p(r,[["render",d]]);export{f as __pageData,v as default};
