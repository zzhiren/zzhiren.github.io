import{_ as s,o as n,c as a,a as o}from"./app.09b4d0c2.js";const A=JSON.parse('{"title":"Nuxt.js","description":"","frontmatter":{},"headers":[{"level":2,"title":"Installation","slug":"installation","link":"#installation","children":[]},{"level":2,"title":"Using the store outside of setup()","slug":"using-the-store-outside-of-setup","link":"#using-the-store-outside-of-setup","children":[]},{"level":2,"title":"Auto imports","slug":"auto-imports","link":"#auto-imports","children":[]},{"level":2,"title":"Nuxt 2 without bridge","slug":"nuxt-2-without-bridge","link":"#nuxt-2-without-bridge","children":[{"level":3,"title":"TypeScript","slug":"typescript","link":"#typescript","children":[]},{"level":3,"title":"Using Pinia alongside Vuex","slug":"using-pinia-alongside-vuex","link":"#using-pinia-alongside-vuex","children":[]}]}],"relativePath":"ssr/nuxt.md"}'),l={name:"ssr/nuxt.md"},p=o(`<h1 id="nuxt-js" tabindex="-1">Nuxt.js <a class="header-anchor" href="#nuxt-js" aria-hidden="true">#</a></h1><p>Using Pinia with <a href="https://nuxt.com/" target="_blank" rel="noreferrer">Nuxt</a> is easier since Nuxt takes care of a lot of things when it comes to <em>server side rendering</em>. For instance, <strong>you don&#39;t need to care about serialization nor XSS attacks</strong>. Pinia supports Nuxt Bridge and Nuxt 3. For bare Nuxt 2 support, <a href="#nuxt-2-without-bridge">see below</a>.</p><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-hidden="true">#</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">yarn </span><span style="color:#E7EE98;">add</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">pinia</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">@pinia/nuxt</span></span>
<span class="line"><span style="color:#7B7F8B;"># or with npm</span></span>
<span class="line"><span style="color:#F6F6F4;">npm </span><span style="color:#E7EE98;">install</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">pinia</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">@pinia/nuxt</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#59873A;">yarn</span><span style="color:#393A34;"> </span><span style="color:#B56959;">add</span><span style="color:#393A34;"> </span><span style="color:#B56959;">pinia</span><span style="color:#393A34;"> </span><span style="color:#B56959;">@pinia/nuxt</span></span>
<span class="line"><span style="color:#A0ADA0;"># or with npm</span></span>
<span class="line"><span style="color:#59873A;">npm</span><span style="color:#393A34;"> </span><span style="color:#B56959;">install</span><span style="color:#393A34;"> </span><span style="color:#B56959;">pinia</span><span style="color:#393A34;"> </span><span style="color:#B56959;">@pinia/nuxt</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>If you&#39;re using npm, you might encounter an <em>ERESOLVE unable to resolve dependency tree</em> error. In that case, add the following to your <code>package.json</code>:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">overrides</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">: {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">vue</span><span style="color:#DEE492;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">latest</span><span style="color:#DEE492;">&quot;</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">overrides</span><span style="color:#B56959AA;">&quot;</span><span style="color:#393A34;">: </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">vue</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">latest</span><span style="color:#B56959AA;">&quot;</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span></code></pre></div></div><p>We supply a <em>module</em> to handle everything for you, you only need to add it to <code>modules</code> in your <code>nuxt.config.js</code> file:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">// nuxt.config.js</span></span>
<span class="line"><span style="color:#F286C4;">export</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">default</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">defineNuxtConfig</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// ... other options</span></span>
<span class="line"><span style="color:#F6F6F4;">  modules</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// ...</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">@pinia/nuxt</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  ],</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// nuxt.config.js</span></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">default</span><span style="color:#393A34;"> </span><span style="color:#59873A;">defineNuxtConfig</span><span style="color:#999999;">({</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// ... other options</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">modules</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#999999;">[</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// ...</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">@pinia/nuxt</span><span style="color:#B56959AA;">&#39;</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">],</span></span>
<span class="line"><span style="color:#999999;">})</span></span>
<span class="line"></span></code></pre></div><p>And that&#39;s it, use your store as usual!</p><h2 id="using-the-store-outside-of-setup" tabindex="-1">Using the store outside of <code>setup()</code> <a class="header-anchor" href="#using-the-store-outside-of-setup" aria-hidden="true">#</a></h2><p>If you want to use a store outside of <code>setup()</code>, remember to pass the <code>pinia</code> object to <code>useStore()</code>. We added it to <a href="https://nuxtjs.org/docs/2.x/internals-glossary/context" target="_blank" rel="noreferrer">the context</a> so you have access to it in <code>asyncData()</code> and <code>fetch()</code>:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> { useStore } </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">~/stores/myStore</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">export</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">default</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#62E884;">asyncData</span><span style="color:#F6F6F4;">({ </span><span style="color:#FFB86C;font-style:italic;">$pinia</span><span style="color:#F6F6F4;"> }) {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> store </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">useStore</span><span style="color:#F6F6F4;">($pinia)</span></span>
<span class="line"><span style="color:#F6F6F4;">  },</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">useStore</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">~/stores/myStore</span><span style="color:#B56959AA;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">default</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">asyncData</span><span style="color:#999999;">({</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">$pinia</span><span style="color:#393A34;"> </span><span style="color:#999999;">})</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">store</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">useStore</span><span style="color:#999999;">(</span><span style="color:#B07D48;">$pinia</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">},</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span></code></pre></div><p>As with <code>onServerPrefetch()</code>, you don&#39;t need to do anything special if you want to call a store action within <code>asyncData()</code>:</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">&lt;</span><span style="color:#F286C4;">script</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">setup</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> store </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">useStore</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> { data } </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">await</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">useAsyncData</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">user</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, () </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> store.</span><span style="color:#62E884;">fetchUser</span><span style="color:#F6F6F4;">())</span></span>
<span class="line"><span style="color:#F6F6F4;">&lt;/</span><span style="color:#F286C4;">script</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#999999;">&lt;</span><span style="color:#1E754F;">script</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">setup</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">store</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">useStore</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">data</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">await</span><span style="color:#393A34;"> </span><span style="color:#59873A;">useAsyncData</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">user</span><span style="color:#B56959AA;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">store</span><span style="color:#999999;">.</span><span style="color:#59873A;">fetchUser</span><span style="color:#999999;">())</span></span>
<span class="line"><span style="color:#999999;">&lt;/</span><span style="color:#1E754F;">script</span><span style="color:#999999;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="auto-imports" tabindex="-1">Auto imports <a class="header-anchor" href="#auto-imports" aria-hidden="true">#</a></h2><p>By default <code>@pinia/nuxt</code> exposes a few auto imports:</p><ul><li><code>usePinia()</code>, which is similar to <code>getActivePinia()</code> but works better with Nuxt. You can add auto imports to make your life easier:</li><li><code>defineStore()</code> to define stores</li><li><code>storeToRefs()</code> when you need to extract individual refs from a store</li><li><code>acceptHMRUpdate()</code> for <a href="./../cookbook/hot-module-replacement.html">hot module replacement</a></li></ul><p>It also automatically imports <strong>all stores</strong> defined within your <code>stores</code> folder. It doesn&#39;t lookup for nested stores though. You can customize this behavior by setting the <code>storesDirs</code> option:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">// nuxt.config.ts</span></span>
<span class="line"><span style="color:#F286C4;">export</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">default</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">defineNuxtConfig</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// ... other options</span></span>
<span class="line"><span style="color:#F6F6F4;">  modules</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">@pinia/nuxt</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">],</span></span>
<span class="line"><span style="color:#F6F6F4;">  pinia</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    storesDirs</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">./stores/**</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">./custom-folder/stores/**</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">],</span></span>
<span class="line"><span style="color:#F6F6F4;">  },</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// nuxt.config.ts</span></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">default</span><span style="color:#393A34;"> </span><span style="color:#59873A;">defineNuxtConfig</span><span style="color:#999999;">({</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// ... other options</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#998418;">modules</span><span style="color:#999999;">: [</span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">@pinia/nuxt</span><span style="color:#B56959AA;">&#39;</span><span style="color:#999999;">],</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#998418;">pinia</span><span style="color:#999999;">: {</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#998418;">storesDirs</span><span style="color:#999999;">: [</span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">./stores/**</span><span style="color:#B56959AA;">&#39;</span><span style="color:#999999;">, </span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">./custom-folder/stores/**</span><span style="color:#B56959AA;">&#39;</span><span style="color:#999999;">],</span></span>
<span class="line"><span style="color:#999999;">  },</span></span>
<span class="line"><span style="color:#999999;">})</span></span>
<span class="line"></span></code></pre></div><p>Note the folders are relative to the root of your project. If you change the <code>srcDir</code> option, you need to adapt the paths accordingly.</p><h2 id="nuxt-2-without-bridge" tabindex="-1">Nuxt 2 without bridge <a class="header-anchor" href="#nuxt-2-without-bridge" aria-hidden="true">#</a></h2><p>Pinia supports Nuxt 2 until <code>@pinia/nuxt</code> v0.2.1. Make sure to also install <a href="https://composition-api.nuxtjs.org/" target="_blank" rel="noreferrer"><code>@nuxtjs/composition-api</code></a> alongside <code>pinia</code>:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">yarn </span><span style="color:#E7EE98;">add</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">pinia</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">@pinia/nuxt@0.2.1</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">@nuxtjs/composition-api</span></span>
<span class="line"><span style="color:#7B7F8B;"># or with npm</span></span>
<span class="line"><span style="color:#F6F6F4;">npm </span><span style="color:#E7EE98;">install</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">pinia</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">@pinia/nuxt@0.2.1</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">@nuxtjs/composition-api</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#59873A;">yarn</span><span style="color:#393A34;"> </span><span style="color:#B56959;">add</span><span style="color:#393A34;"> </span><span style="color:#B56959;">pinia</span><span style="color:#393A34;"> </span><span style="color:#B56959;">@pinia/nuxt@0.2.1</span><span style="color:#393A34;"> </span><span style="color:#B56959;">@nuxtjs/composition-api</span></span>
<span class="line"><span style="color:#A0ADA0;"># or with npm</span></span>
<span class="line"><span style="color:#59873A;">npm</span><span style="color:#393A34;"> </span><span style="color:#B56959;">install</span><span style="color:#393A34;"> </span><span style="color:#B56959;">pinia</span><span style="color:#393A34;"> </span><span style="color:#B56959;">@pinia/nuxt@0.2.1</span><span style="color:#393A34;"> </span><span style="color:#B56959;">@nuxtjs/composition-api</span></span>
<span class="line"></span></code></pre></div><p>We supply a <em>module</em> to handle everything for you, you only need to add it to <code>buildModules</code> in your <code>nuxt.config.js</code> file:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">// nuxt.config.js</span></span>
<span class="line"><span style="color:#F286C4;">export</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">default</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// ... other options</span></span>
<span class="line"><span style="color:#F6F6F4;">  buildModules</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// Nuxt 2 only:</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// https://composition-api.nuxtjs.org/getting-started/setup#quick-start</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">@nuxtjs/composition-api/module</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">@pinia/nuxt</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  ],</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// nuxt.config.js</span></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">default</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// ... other options</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">buildModules</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#999999;">[</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// Nuxt 2 only:</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// https://composition-api.nuxtjs.org/getting-started/setup#quick-start</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">@nuxtjs/composition-api/module</span><span style="color:#B56959AA;">&#39;</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">@pinia/nuxt</span><span style="color:#B56959AA;">&#39;</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">],</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="typescript" tabindex="-1">TypeScript <a class="header-anchor" href="#typescript" aria-hidden="true">#</a></h3><p>If you are using Nuxt 2 (<code>@pinia/nuxt</code> &lt; 0.3.0) with TypeScript or have a <code>jsconfig.json</code>, you should also add the types for <code>context.pinia</code>:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">{</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#97E2F2;">&quot;</span><span style="color:#97E1F1;">types</span><span style="color:#97E2F2;">&quot;</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// ...</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">@pinia/nuxt</span><span style="color:#DEE492;">&quot;</span></span>
<span class="line"><span style="color:#F6F6F4;">  ]</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B56959AA;">&quot;</span><span style="color:#998418;">types</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#999999;">[</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#A0ADA0;">// ...</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">@pinia/nuxt</span><span style="color:#B56959AA;">&quot;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">]</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span></code></pre></div><p>This will also ensure you have autocompletion 😉 .</p><h3 id="using-pinia-alongside-vuex" tabindex="-1">Using Pinia alongside Vuex <a class="header-anchor" href="#using-pinia-alongside-vuex" aria-hidden="true">#</a></h3><p>It is recommended to <strong>avoid using both Pinia and Vuex</strong> but if you need to use both, you need to tell pinia to not disable it:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">// nuxt.config.js</span></span>
<span class="line"><span style="color:#F286C4;">export</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">default</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  buildModules</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">@nuxtjs/composition-api/module</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    [</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">@pinia/nuxt</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, { disableVuex</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">false</span><span style="color:#F6F6F4;"> }],</span></span>
<span class="line"><span style="color:#F6F6F4;">  ],</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// ... other options</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// nuxt.config.js</span></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">default</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">buildModules</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#999999;">[</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">@nuxtjs/composition-api/module</span><span style="color:#B56959AA;">&#39;</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">[</span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">@pinia/nuxt</span><span style="color:#B56959AA;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#998418;">disableVuex</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">false</span><span style="color:#393A34;"> </span><span style="color:#999999;">}],</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">],</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// ... other options</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span></code></pre></div>`,31),e=[p];function t(c,r,i,y,F,d){return n(),a("div",null,e)}const h=s(l,[["render",t]]);export{A as __pageData,h as default};
