import{_ as e,o as t,c as a,a as i}from"./app.09b4d0c2.js";const m=JSON.parse('{"title":"接口：StoreDefinition<Id, S, G, A>","description":"","frontmatter":{"sidebar":"auto","editLinks":false,"sidebarDepth":3},"headers":[{"level":2,"title":"类型参数","slug":"type-parameters","link":"#type-parameters","children":[]},{"level":2,"title":"Callable","slug":"callable","link":"#callable","children":[{"level":3,"title":"StoreDefinition","slug":"storedefinition","link":"#storedefinition","children":[]}]},{"level":2,"title":"属性","slug":"属性","link":"#属性","children":[{"level":3,"title":"$id","slug":"id","link":"#id","children":[]}]}],"relativePath":"zh/api/interfaces/pinia.StoreDefinition.md"}'),d={name:"zh/api/interfaces/pinia.StoreDefinition.md"},o=i('<p><a href="./../">API 文档</a> / <a href="./../modules/pinia.html">pinia</a> / StoreDefinition</p><h1 id="interface-storedefinition-id-s-g-a" tabindex="-1">接口：StoreDefinition&lt;Id, S, G, A&gt; <a class="header-anchor" href="#interface-storedefinition-id-s-g-a" aria-hidden="true">#</a></h1><p><a href="./../modules/pinia.html">pinia</a>.StoreDefinition</p><h2 id="type-parameters" tabindex="-1">类型参数 <a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a></h2><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Id</code></td><td style="text-align:left;">extends <code>string</code> = <code>string</code></td></tr><tr><td style="text-align:left;"><code>S</code></td><td style="text-align:left;">extends <a href="./../modules/pinia.html#statetree"><code>StateTree</code></a> = <a href="./../modules/pinia.html#statetree"><code>StateTree</code></a></td></tr><tr><td style="text-align:left;"><code>G</code></td><td style="text-align:left;"><a href="./../modules/pinia.html#_getterstree"><code>_GettersTree</code></a>&lt;<code>S</code>&gt;</td></tr><tr><td style="text-align:left;"><code>A</code></td><td style="text-align:left;"><a href="./../modules/pinia.html#_actionstree"><code>_ActionsTree</code></a></td></tr></tbody></table><h2 id="callable" tabindex="-1">Callable <a class="header-anchor" href="#callable" aria-hidden="true">#</a></h2><h3 id="storedefinition" tabindex="-1">StoreDefinition <a class="header-anchor" href="#storedefinition" aria-hidden="true">#</a></h3><p>▸ <strong>StoreDefinition</strong>(<code>pinia?</code>, <code>hot?</code>): <a href="./../modules/pinia.html#store"><code>Store</code></a>&lt;<code>Id</code>, <code>S</code>, <code>G</code>, <code>A</code>&gt;</p><p>返回一个 store，有需要才创建它。</p><h4 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>pinia?</code></td><td style="text-align:left;"><code>null</code> | <a href="./pinia.Pinia.html"><code>Pinia</code></a></td><td style="text-align:left;">Pinia instance to retrieve the store</td></tr><tr><td style="text-align:left;"><code>hot?</code></td><td style="text-align:left;"><a href="./../modules/pinia.html#storegeneric"><code>StoreGeneric</code></a></td><td style="text-align:left;">dev only hot module replacement</td></tr></tbody></table><h4 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-hidden="true">#</a></h4><p><a href="./../modules/pinia.html#store"><code>Store</code></a>&lt;<code>Id</code>, <code>S</code>, <code>G</code>, <code>A</code>&gt;</p><h2 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-hidden="true">#</a></h2><h3 id="id" tabindex="-1">$id <a class="header-anchor" href="#id" aria-hidden="true">#</a></h3><p>• <strong>$id</strong>: <code>Id</code></p><p>store 的 id。供映射辅助函数使用。</p>',17),l=[o];function r(n,c,s,h,f,p){return t(),a("div",null,l)}const x=e(d,[["render",r]]);export{m as __pageData,x as default};
