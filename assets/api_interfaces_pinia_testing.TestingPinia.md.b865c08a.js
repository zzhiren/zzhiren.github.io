import{_ as e,o as a,c as t,a as i}from"./app.09b4d0c2.js";const u=JSON.parse('{"title":"Interface: TestingPinia","description":"","frontmatter":{"editLink":false},"headers":[{"level":2,"title":"Hierarchy","slug":"hierarchy","link":"#hierarchy","children":[]},{"level":2,"title":"Properties","slug":"properties","link":"#properties","children":[{"level":3,"title":"app","slug":"app","link":"#app","children":[]},{"level":3,"title":"install","slug":"install","link":"#install","children":[]},{"level":3,"title":"state","slug":"state","link":"#state","children":[]}]},{"level":2,"title":"Methods","slug":"methods","link":"#methods","children":[{"level":3,"title":"use","slug":"use","link":"#use","children":[]}]}],"relativePath":"api/interfaces/pinia_testing.TestingPinia.md"}'),r={name:"api/interfaces/pinia_testing.TestingPinia.md"},n=i('<p><a href="./../">API Documentation</a> / <a href="./../modules/pinia_testing.html">@pinia/testing</a> / TestingPinia</p><h1 id="interface-testingpinia" tabindex="-1">Interface: TestingPinia <a class="header-anchor" href="#interface-testingpinia" aria-hidden="true">#</a></h1><p><a href="./../modules/pinia_testing.html">@pinia/testing</a>.TestingPinia</p><p>Pinia instance specifically designed for testing. Extends a regular <code>Pinia</code> instance with test specific properties.</p><h2 id="hierarchy" tabindex="-1">Hierarchy <a class="header-anchor" href="#hierarchy" aria-hidden="true">#</a></h2><ul><li><p><a href="./pinia.Pinia.html"><code>Pinia</code></a></p><p>↳ <strong><code>TestingPinia</code></strong></p></li></ul><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-hidden="true">#</a></h2><h3 id="app" tabindex="-1">app <a class="header-anchor" href="#app" aria-hidden="true">#</a></h3><p>• <strong>app</strong>: <code>App</code>&lt;<code>any</code>&gt;</p><p>App used by Pinia</p><hr><h3 id="install" tabindex="-1">install <a class="header-anchor" href="#install" aria-hidden="true">#</a></h3><p>• <strong>install</strong>: (<code>app</code>: <code>App</code>&lt;<code>any</code>&gt;) =&gt; <code>void</code></p><h4 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-hidden="true">#</a></h4><p>▸ (<code>app</code>): <code>void</code></p><h5 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-hidden="true">#</a></h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>app</code></td><td style="text-align:left;"><code>App</code>&lt;<code>any</code>&gt;</td></tr></tbody></table><h5 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-hidden="true">#</a></h5><p><code>void</code></p><h4 id="inherited-from" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from" aria-hidden="true">#</a></h4><p><a href="./pinia.Pinia.html">Pinia</a>.<a href="./pinia.Pinia.html#install">install</a></p><hr><h3 id="state" tabindex="-1">state <a class="header-anchor" href="#state" aria-hidden="true">#</a></h3><p>• <strong>state</strong>: <code>Ref</code>&lt;<code>Record</code>&lt;<code>string</code>, <a href="./../modules/pinia.html#StateTree"><code>StateTree</code></a>&gt;&gt;</p><p>root state</p><h4 id="inherited-from-1" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-1" aria-hidden="true">#</a></h4><p><a href="./pinia.Pinia.html">Pinia</a>.<a href="./pinia.Pinia.html#state">state</a></p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-hidden="true">#</a></h2><h3 id="use" tabindex="-1">use <a class="header-anchor" href="#use" aria-hidden="true">#</a></h3><p>▸ <strong>use</strong>(<code>plugin</code>): <a href="./pinia.Pinia.html"><code>Pinia</code></a></p><p>Adds a store plugin to extend every store</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>plugin</code></td><td style="text-align:left;"><a href="./pinia.PiniaPlugin.html"><code>PiniaPlugin</code></a></td><td style="text-align:left;">store plugin to add</td></tr></tbody></table><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-hidden="true">#</a></h4><p><a href="./pinia.Pinia.html"><code>Pinia</code></a></p><h4 id="inherited-from-2" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-2" aria-hidden="true">#</a></h4><p><a href="./pinia.Pinia.html">Pinia</a>.<a href="./pinia.Pinia.html#use">use</a></p>',37),d=[n];function h(s,l,o,c,p,f){return a(),t("div",null,d)}const m=e(r,[["render",h]]);export{u as __pageData,m as default};
