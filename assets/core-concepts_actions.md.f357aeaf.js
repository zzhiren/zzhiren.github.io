import{_ as p,r as o,o as e,c as t,b as n,d as a,e as c,a as l}from"./app.09b4d0c2.js";const C=JSON.parse('{"title":"Actions","description":"","frontmatter":{},"headers":[{"level":2,"title":"Accessing other stores actions","slug":"accessing-other-stores-actions","link":"#accessing-other-stores-actions","children":[]},{"level":2,"title":"Usage with the Options API","slug":"usage-with-the-options-api","link":"#usage-with-the-options-api","children":[{"level":3,"title":"With setup()","slug":"with-setup","link":"#with-setup","children":[]},{"level":3,"title":"Without setup()","slug":"without-setup","link":"#without-setup","children":[]}]},{"level":2,"title":"Subscribing to actions","slug":"subscribing-to-actions","link":"#subscribing-to-actions","children":[]}],"relativePath":"core-concepts/actions.md"}'),r={name:"core-concepts/actions.md"},y=a("h1",{id:"actions",tabindex:"-1"},[c("Actions "),a("a",{class:"header-anchor",href:"#actions","aria-hidden":"true"},"#")],-1),F=l(`<p>Actions are the equivalent of <a href="https://v3.vuejs.org/guide/data-methods.html#methods" target="_blank" rel="noreferrer">methods</a> in components. They can be defined with the <code>actions</code> property in <code>defineStore()</code> and <strong>they are perfect to define business logic</strong>:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">export</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> useCounterStore </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">defineStore</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">counter</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#62E884;">state</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> () </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> ({</span></span>
<span class="line"><span style="color:#F6F6F4;">    count</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  }),</span></span>
<span class="line"><span style="color:#F6F6F4;">  actions</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// since we rely on \`this\`, we cannot use an arrow function</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">increment</span><span style="color:#F6F6F4;">() {</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.count</span><span style="color:#F286C4;">++</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">randomizeCounter</span><span style="color:#F6F6F4;">() {</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.count </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> Math.</span><span style="color:#62E884;">round</span><span style="color:#F6F6F4;">(</span><span style="color:#BF9EEE;">100</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">*</span><span style="color:#F6F6F4;"> Math.</span><span style="color:#62E884;">random</span><span style="color:#F6F6F4;">())</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"><span style="color:#F6F6F4;">  },</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">useCounterStore</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">defineStore</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">counter</span><span style="color:#B56959AA;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">state</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">({</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#998418;">count</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">0</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}),</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">actions</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// since we rely on \`this\`, we cannot use an arrow function</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">increment</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">count</span><span style="color:#AB5959;">++</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">},</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">randomizeCounter</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">count</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">Math</span><span style="color:#999999;">.</span><span style="color:#59873A;">round</span><span style="color:#999999;">(</span><span style="color:#2F798A;">100</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">*</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">Math</span><span style="color:#999999;">.</span><span style="color:#59873A;">random</span><span style="color:#999999;">())</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">},</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">},</span></span>
<span class="line"><span style="color:#999999;">})</span></span>
<span class="line"></span></code></pre></div><p>Like <a href="./getters.html">getters</a>, actions get access to the <em>whole store instance</em> through <code>this</code> with <strong>full typing (and autocompletion âœ¨) support</strong>. <strong>Unlike getters, <code>actions</code> can be asynchronous</strong>, you can <code>await</code> inside of actions any API call or even other actions! Here is an example using <a href="https://github.com/posva/mande" target="_blank" rel="noreferrer">Mande</a>. Note the library you use doesn&#39;t matter as long as you get a <code>Promise</code>, you could even use the native <code>fetch</code> function (browser only):</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> { mande } </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">mande</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> api </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">mande</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">/api/users</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">export</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> useUsers </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">defineStore</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">users</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#62E884;">state</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> () </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> ({</span></span>
<span class="line"><span style="color:#F6F6F4;">    userData</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">null</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// ...</span></span>
<span class="line"><span style="color:#F6F6F4;">  }),</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">  actions</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">async</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">registerUser</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">login</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">password</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#F286C4;">try</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.userData </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">await</span><span style="color:#F6F6F4;"> api.</span><span style="color:#62E884;">post</span><span style="color:#F6F6F4;">({ login, password })</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#62E884;">showTooltip</span><span style="color:#F6F6F4;">(</span><span style="color:#E7EE98;">\`Welcome back </span><span style="color:#F286C4;">\${</span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.userData.name</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;">!\`</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">      } </span><span style="color:#F286C4;">catch</span><span style="color:#F6F6F4;"> (error) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#62E884;">showTooltip</span><span style="color:#F6F6F4;">(error)</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// let the form component display the error</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> error</span></span>
<span class="line"><span style="color:#F6F6F4;">      }</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"><span style="color:#F6F6F4;">  },</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">mande</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">mande</span><span style="color:#B56959AA;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">api</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">mande</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">/api/users</span><span style="color:#B56959AA;">&#39;</span><span style="color:#999999;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">useUsers</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">defineStore</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">users</span><span style="color:#B56959AA;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">state</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">({</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#998418;">userData</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">null</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// ...</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}),</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">actions</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#AB5959;">async</span><span style="color:#393A34;"> </span><span style="color:#59873A;">registerUser</span><span style="color:#999999;">(</span><span style="color:#B07D48;">login</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">password</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#1E754F;">try</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">userData</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">await</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">api</span><span style="color:#999999;">.</span><span style="color:#59873A;">post</span><span style="color:#999999;">({</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">login</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">password</span><span style="color:#393A34;"> </span><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#59873A;">showTooltip</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">\`</span><span style="color:#B56959;">Welcome back </span><span style="color:#999999;">\${</span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B56959;">userData</span><span style="color:#999999;">.</span><span style="color:#B56959;">name</span><span style="color:#999999;">}</span><span style="color:#B56959;">!</span><span style="color:#B56959AA;">\`</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">catch</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">error</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#59873A;">showTooltip</span><span style="color:#999999;">(</span><span style="color:#B07D48;">error</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#999999;">        </span><span style="color:#A0ADA0;">// let the form component display the error</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">error</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">},</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">},</span></span>
<span class="line"><span style="color:#999999;">})</span></span>
<span class="line"></span></code></pre></div><p>You are also completely free to set whatever arguments you want and return anything. When calling actions, everything will be automatically inferred!</p><p>Actions are invoked like regular functions and methods:</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">&lt;</span><span style="color:#F286C4;">script</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">setup</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> store </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">useCounterStore</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"><span style="color:#7B7F8B;">// call the action as a method of the store</span></span>
<span class="line"><span style="color:#F6F6F4;">store.</span><span style="color:#62E884;">randomizeCounter</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"><span style="color:#F6F6F4;">&lt;/</span><span style="color:#F286C4;">script</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">&lt;</span><span style="color:#F286C4;">template</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">&lt;!-- Even on the template --&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">  &lt;</span><span style="color:#F286C4;">button</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">@click</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">store.randomizeCounter()</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">&gt;Randomize&lt;/</span><span style="color:#F286C4;">button</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">&lt;/</span><span style="color:#F286C4;">template</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#999999;">&lt;</span><span style="color:#1E754F;">script</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">setup</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">store</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">useCounterStore</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#A0ADA0;">// call the action as a method of the store</span></span>
<span class="line"><span style="color:#B07D48;">store</span><span style="color:#999999;">.</span><span style="color:#59873A;">randomizeCounter</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#999999;">&lt;/</span><span style="color:#1E754F;">script</span><span style="color:#999999;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#999999;">&lt;</span><span style="color:#1E754F;">template</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#A0ADA0;">&lt;!-- Even on the template --&gt;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">&lt;</span><span style="color:#1E754F;">button</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">@click</span><span style="color:#999999;">=</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">store.randomizeCounter()</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">&gt;</span><span style="color:#393A34;">Randomize</span><span style="color:#999999;">&lt;/</span><span style="color:#1E754F;">button</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#999999;">&lt;/</span><span style="color:#1E754F;">template</span><span style="color:#999999;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="accessing-other-stores-actions" tabindex="-1">Accessing other stores actions <a class="header-anchor" href="#accessing-other-stores-actions" aria-hidden="true">#</a></h2><p>To use another store, you can directly <em>use it</em> inside of the <em>action</em>:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> { useAuthStore } </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">./auth-store</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">export</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> useSettingsStore </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">defineStore</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">settings</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#62E884;">state</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> () </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> ({</span></span>
<span class="line"><span style="color:#F6F6F4;">    preferences</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">null</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// ...</span></span>
<span class="line"><span style="color:#F6F6F4;">  }),</span></span>
<span class="line"><span style="color:#F6F6F4;">  actions</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">async</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">fetchUserPreferences</span><span style="color:#F6F6F4;">() {</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> auth </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">useAuthStore</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (auth.isAuthenticated) {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.preferences </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">await</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">fetchPreferences</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"><span style="color:#F6F6F4;">      } </span><span style="color:#F286C4;">else</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">throw</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Error</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">User must be authenticated</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">      }</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"><span style="color:#F6F6F4;">  },</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">useAuthStore</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">./auth-store</span><span style="color:#B56959AA;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">useSettingsStore</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">defineStore</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">settings</span><span style="color:#B56959AA;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">state</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">({</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#998418;">preferences</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">null</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// ...</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}),</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">actions</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#AB5959;">async</span><span style="color:#393A34;"> </span><span style="color:#59873A;">fetchUserPreferences</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">auth</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">useAuthStore</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">auth</span><span style="color:#999999;">.</span><span style="color:#B07D48;">isAuthenticated</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">preferences</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">await</span><span style="color:#393A34;"> </span><span style="color:#59873A;">fetchPreferences</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">else</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#1E754F;">throw</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">new</span><span style="color:#393A34;"> </span><span style="color:#59873A;">Error</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">User must be authenticated</span><span style="color:#B56959AA;">&#39;</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">},</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">},</span></span>
<span class="line"><span style="color:#999999;">})</span></span>
<span class="line"></span></code></pre></div><h2 id="usage-with-the-options-api" tabindex="-1">Usage with the Options API <a class="header-anchor" href="#usage-with-the-options-api" aria-hidden="true">#</a></h2>`,11),i=l(`<p>For the following examples, you can assume the following store was created:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">// Example File Path:</span></span>
<span class="line"><span style="color:#7B7F8B;">// ./src/stores/counter.js</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> { defineStore } </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">pinia</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">export</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> useCounterStore </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">defineStore</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">counter</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#62E884;">state</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> () </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> ({</span></span>
<span class="line"><span style="color:#F6F6F4;">    count</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">0</span></span>
<span class="line"><span style="color:#F6F6F4;">  }),</span></span>
<span class="line"><span style="color:#F6F6F4;">  actions</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">increment</span><span style="color:#F6F6F4;">() {</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.count</span><span style="color:#F286C4;">++</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// Example File Path:</span></span>
<span class="line"><span style="color:#A0ADA0;">// ./src/stores/counter.js</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">defineStore</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">pinia</span><span style="color:#B56959AA;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">useCounterStore</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">defineStore</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">counter</span><span style="color:#B56959AA;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">state</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">({</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#998418;">count</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">0</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}),</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">actions</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">increment</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">count</span><span style="color:#AB5959;">++</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#999999;">})</span></span>
<span class="line"></span></code></pre></div><h3 id="with-setup" tabindex="-1">With <code>setup()</code> <a class="header-anchor" href="#with-setup" aria-hidden="true">#</a></h3><p>While Composition API is not for everyone, the <code>setup()</code> hook can make using Pinia easier to work within the Options API. No extra map helper functions needed!</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">&lt;</span><span style="color:#F286C4;">script</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> { useCounterStore } </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">../stores/counter</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">export</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">default</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">defineComponent</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#62E884;">setup</span><span style="color:#F6F6F4;">() {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> counterStore </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">useCounterStore</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> { counterStore }</span></span>
<span class="line"><span style="color:#F6F6F4;">  },</span></span>
<span class="line"><span style="color:#F6F6F4;">  methods</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">incrementAndPrint</span><span style="color:#F6F6F4;">() {</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.counterStore.</span><span style="color:#62E884;">increment</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"><span style="color:#F6F6F4;">      console.</span><span style="color:#62E884;">log</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">New Count:</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, </span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.counterStore.count)</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"><span style="color:#F6F6F4;">  },</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span>
<span class="line"><span style="color:#F6F6F4;">&lt;/</span><span style="color:#F286C4;">script</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#999999;">&lt;</span><span style="color:#1E754F;">script</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">useCounterStore</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">../stores/counter</span><span style="color:#B56959AA;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">default</span><span style="color:#393A34;"> </span><span style="color:#59873A;">defineComponent</span><span style="color:#999999;">({</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">setup</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">counterStore</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">useCounterStore</span><span style="color:#999999;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">counterStore</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">},</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">methods</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">incrementAndPrint</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">counterStore</span><span style="color:#999999;">.</span><span style="color:#59873A;">increment</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">New Count:</span><span style="color:#B56959AA;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">counterStore</span><span style="color:#999999;">.</span><span style="color:#B07D48;">count</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">},</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">},</span></span>
<span class="line"><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#999999;">&lt;/</span><span style="color:#1E754F;">script</span><span style="color:#999999;">&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="without-setup" tabindex="-1">Without <code>setup()</code> <a class="header-anchor" href="#without-setup" aria-hidden="true">#</a></h3><p>If you would prefer not to use Composition API at all, you can use the <code>mapActions()</code> helper to map actions properties as methods in your component:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> { mapActions } </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">pinia</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> { useCounterStore } </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">../stores/counter</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">export</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">default</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  methods</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// gives access to this.increment() inside the component</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// same as calling from store.increment()</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">...</span><span style="color:#62E884;">mapActions</span><span style="color:#F6F6F4;">(useCounterStore, [</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">increment</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">]),</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// same as above but registers it as this.myOwnName()</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">...</span><span style="color:#62E884;">mapActions</span><span style="color:#F6F6F4;">(useCounterStore, { myOwnName</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">increment</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;"> }),</span></span>
<span class="line"><span style="color:#F6F6F4;">  },</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">mapActions</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">pinia</span><span style="color:#B56959AA;">&#39;</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">useCounterStore</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">../stores/counter</span><span style="color:#B56959AA;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">default</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">methods</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// gives access to this.increment() inside the component</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// same as calling from store.increment()</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">...</span><span style="color:#59873A;">mapActions</span><span style="color:#999999;">(</span><span style="color:#B07D48;">useCounterStore</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">[</span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">increment</span><span style="color:#B56959AA;">&#39;</span><span style="color:#999999;">]),</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// same as above but registers it as this.myOwnName()</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">...</span><span style="color:#59873A;">mapActions</span><span style="color:#999999;">(</span><span style="color:#B07D48;">useCounterStore</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#998418;">myOwnName</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">increment</span><span style="color:#B56959AA;">&#39;</span><span style="color:#393A34;"> </span><span style="color:#999999;">}),</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">},</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="subscribing-to-actions" tabindex="-1">Subscribing to actions <a class="header-anchor" href="#subscribing-to-actions" aria-hidden="true">#</a></h2><p>It is possible to observe actions and their outcome with <code>store.$onAction()</code>. The callback passed to it is executed before the action itself. <code>after</code> handles promises and allows you to execute a function after the action resolves. In a similar way, <code>onError</code> allows you to execute a function if the action throws or rejects. These are useful for tracking errors at runtime, similar to <a href="https://v3.vuejs.org/guide/tooling/deployment.html#tracking-runtime-errors" target="_blank" rel="noreferrer">this tip in the Vue docs</a>.</p><p>Here is an example that logs before running actions and after they resolve/reject.</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> unsubscribe </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> someStore.</span><span style="color:#62E884;">$onAction</span><span style="color:#F6F6F4;">(</span></span>
<span class="line"><span style="color:#F6F6F4;">  ({</span></span>
<span class="line"><span style="color:#F6F6F4;">    name, </span><span style="color:#7B7F8B;">// name of the action</span></span>
<span class="line"><span style="color:#F6F6F4;">    store, </span><span style="color:#7B7F8B;">// store instance, same as \`someStore\`</span></span>
<span class="line"><span style="color:#F6F6F4;">    args, </span><span style="color:#7B7F8B;">// array of parameters passed to the action</span></span>
<span class="line"><span style="color:#F6F6F4;">    after, </span><span style="color:#7B7F8B;">// hook after the action returns or resolves</span></span>
<span class="line"><span style="color:#F6F6F4;">    onError, </span><span style="color:#7B7F8B;">// hook if the action throws or rejects</span></span>
<span class="line"><span style="color:#F6F6F4;">  }) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// a shared variable for this specific action call</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> startTime </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> Date.</span><span style="color:#62E884;">now</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// this will trigger before an action on \`store\` is executed</span></span>
<span class="line"><span style="color:#F6F6F4;">    console.</span><span style="color:#62E884;">log</span><span style="color:#F6F6F4;">(</span><span style="color:#E7EE98;">\`Start &quot;</span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">name</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;">&quot; with params [</span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">args.</span><span style="color:#62E884;">join</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">, </span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">)</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;">].\`</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// this will trigger if the action succeeds and after it has fully run.</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// it waits for any returned promised</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">after</span><span style="color:#F6F6F4;">((</span><span style="color:#FFB86C;font-style:italic;">result</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">      console.</span><span style="color:#62E884;">log</span><span style="color:#F6F6F4;">(</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#E7EE98;">\`Finished &quot;</span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">name</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;">&quot; after </span><span style="color:#F286C4;">\${</span></span>
<span class="line"><span style="color:#E7EE98;">          </span><span style="color:#F6F6F4;">Date.</span><span style="color:#62E884;">now</span><span style="color:#F6F6F4;">()</span><span style="color:#E7EE98;"> </span><span style="color:#F286C4;">-</span><span style="color:#E7EE98;"> </span><span style="color:#F6F6F4;">startTime</span></span>
<span class="line"><span style="color:#E7EE98;">        </span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;">ms.</span><span style="color:#F286C4;">\\n</span><span style="color:#E7EE98;">Result: </span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">result</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;">.\`</span></span>
<span class="line"><span style="color:#F6F6F4;">      )</span></span>
<span class="line"><span style="color:#F6F6F4;">    })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// this will trigger if the action throws or returns a promise that rejects</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">onError</span><span style="color:#F6F6F4;">((</span><span style="color:#FFB86C;font-style:italic;">error</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">      console.</span><span style="color:#62E884;">warn</span><span style="color:#F6F6F4;">(</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#E7EE98;">\`Failed &quot;</span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">name</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;">&quot; after </span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">Date.</span><span style="color:#62E884;">now</span><span style="color:#F6F6F4;">()</span><span style="color:#E7EE98;"> </span><span style="color:#F286C4;">-</span><span style="color:#E7EE98;"> </span><span style="color:#F6F6F4;">startTime</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;">ms.</span><span style="color:#F286C4;">\\n</span><span style="color:#E7EE98;">Error: </span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">error</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;">.\`</span></span>
<span class="line"><span style="color:#F6F6F4;">      )</span></span>
<span class="line"><span style="color:#F6F6F4;">    })</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">// manually remove the listener</span></span>
<span class="line"><span style="color:#62E884;">unsubscribe</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">unsubscribe</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">someStore</span><span style="color:#999999;">.</span><span style="color:#59873A;">$onAction</span><span style="color:#999999;">(</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">({</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">name</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// name of the action</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">store</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// store instance, same as \`someStore\`</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">args</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// array of parameters passed to the action</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">after</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// hook after the action returns or resolves</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">onError</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// hook if the action throws or rejects</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">})</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// a shared variable for this specific action call</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">startTime</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">Date</span><span style="color:#999999;">.</span><span style="color:#59873A;">now</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// this will trigger before an action on \`store\` is executed</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">\`</span><span style="color:#B56959;">Start &quot;</span><span style="color:#999999;">\${</span><span style="color:#B56959;">name</span><span style="color:#999999;">}</span><span style="color:#B56959;">&quot; with params [</span><span style="color:#999999;">\${</span><span style="color:#B56959;">args</span><span style="color:#999999;">.</span><span style="color:#59873A;">join</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">, </span><span style="color:#B56959AA;">&#39;</span><span style="color:#999999;">)</span><span style="color:#999999;">}</span><span style="color:#B56959;">].</span><span style="color:#B56959AA;">\`</span><span style="color:#999999;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// this will trigger if the action succeeds and after it has fully run.</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// it waits for any returned promised</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">after</span><span style="color:#999999;">((</span><span style="color:#B07D48;">result</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#B56959AA;">\`</span><span style="color:#B56959;">Finished &quot;</span><span style="color:#999999;">\${</span><span style="color:#B56959;">name</span><span style="color:#999999;">}</span><span style="color:#B56959;">&quot; after </span><span style="color:#999999;">\${</span></span>
<span class="line"><span style="color:#B56959;">          Date</span><span style="color:#999999;">.</span><span style="color:#59873A;">now</span><span style="color:#999999;">()</span><span style="color:#B56959;"> </span><span style="color:#AB5959;">-</span><span style="color:#B56959;"> startTime</span></span>
<span class="line"><span style="color:#B56959;">        </span><span style="color:#999999;">}</span><span style="color:#B56959;">ms.</span><span style="color:#A65E2B;">\\n</span><span style="color:#B56959;">Result: </span><span style="color:#999999;">\${</span><span style="color:#B56959;">result</span><span style="color:#999999;">}</span><span style="color:#B56959;">.</span><span style="color:#B56959AA;">\`</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// this will trigger if the action throws or returns a promise that rejects</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">onError</span><span style="color:#999999;">((</span><span style="color:#B07D48;">error</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">warn</span><span style="color:#999999;">(</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#B56959AA;">\`</span><span style="color:#B56959;">Failed &quot;</span><span style="color:#999999;">\${</span><span style="color:#B56959;">name</span><span style="color:#999999;">}</span><span style="color:#B56959;">&quot; after </span><span style="color:#999999;">\${</span><span style="color:#B56959;">Date</span><span style="color:#999999;">.</span><span style="color:#59873A;">now</span><span style="color:#999999;">()</span><span style="color:#B56959;"> </span><span style="color:#AB5959;">-</span><span style="color:#B56959;"> startTime</span><span style="color:#999999;">}</span><span style="color:#B56959;">ms.</span><span style="color:#A65E2B;">\\n</span><span style="color:#B56959;">Error: </span><span style="color:#999999;">\${</span><span style="color:#B56959;">error</span><span style="color:#999999;">}</span><span style="color:#B56959;">.</span><span style="color:#B56959AA;">\`</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#999999;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// manually remove the listener</span></span>
<span class="line"><span style="color:#59873A;">unsubscribe</span><span style="color:#999999;">()</span></span>
<span class="line"></span></code></pre></div><p>By default, <em>action subscriptions</em> are bound to the component where they are added (if the store is inside a component&#39;s <code>setup()</code>). Meaning, they will be automatically removed when the component is unmounted. If you also want to keep them after the component is unmounted, pass <code>true</code> as the second argument to <em>detach</em> the <em>action subscription</em> from the current component:</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#F6F6F4;">&lt;</span><span style="color:#F286C4;">script</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;font-style:italic;">setup</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> someStore </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">useSomeStore</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">// this subscription will be kept even after the component is unmounted</span></span>
<span class="line"><span style="color:#F6F6F4;">someStore.</span><span style="color:#62E884;">$onAction</span><span style="color:#F6F6F4;">(callback, </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">&lt;/</span><span style="color:#F286C4;">script</span><span style="color:#F6F6F4;">&gt;</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#999999;">&lt;</span><span style="color:#1E754F;">script</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">setup</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">someStore</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">useSomeStore</span><span style="color:#999999;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// this subscription will be kept even after the component is unmounted</span></span>
<span class="line"><span style="color:#B07D48;">someStore</span><span style="color:#999999;">.</span><span style="color:#59873A;">$onAction</span><span style="color:#999999;">(</span><span style="color:#B07D48;">callback</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">true</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#999999;">&lt;/</span><span style="color:#1E754F;">script</span><span style="color:#999999;">&gt;</span></span>
<span class="line"></span></code></pre></div>`,14);function A(u,E,h,d,B,m){const s=o("VueSchoolLink");return e(),t("div",null,[y,n(s,{href:"https://vueschool.io/lessons/synchronous-and-asynchronous-actions-in-pinia",title:"Learn all about actions in Pinia"}),F,n(s,{href:"https://vueschool.io/lessons/access-pinia-actions-in-the-options-api",title:"Access Pinia Getters via the Options API"}),i])}const f=p(r,[["render",A]]);export{C as __pageData,f as default};
