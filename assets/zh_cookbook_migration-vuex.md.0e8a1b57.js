import{_ as s,o as n,c as a,a as l}from"./app.09b4d0c2.js";const d=JSON.parse('{"title":"从 Vuex ≤4 迁移","description":"","frontmatter":{},"headers":[{"level":2,"title":"准备","slug":"preparation","link":"#preparation","children":[]},{"level":2,"title":"重构 store 的模块","slug":"restructuring-modules-to-stores","link":"#restructuring-modules-to-stores","children":[]},{"level":2,"title":"转换单个模块","slug":"converting-a-single-module","link":"#converting-a-single-module","children":[]},{"level":2,"title":"组件内的使用","slug":"usage-inside-components","link":"#usage-inside-components","children":[]},{"level":2,"title":"组件外的使用","slug":"usage-outside-components","link":"#usage-outside-components","children":[]},{"level":2,"title":"Vuex 高级用法","slug":"advanced-vuex-usage","link":"#advanced-vuex-usage","children":[{"level":3,"title":"动态模块","slug":"dynamic-modules","link":"#dynamic-modules","children":[]},{"level":3,"title":"热更新","slug":"hot-module-replacement","link":"#hot-module-replacement","children":[]},{"level":3,"title":"插件","slug":"plugins","link":"#plugins","children":[]}]}],"relativePath":"zh/cookbook/migration-vuex.md"}'),p={name:"zh/cookbook/migration-vuex.md"},o=l(`<h1 id="migrating-from-vuex-≤4" tabindex="-1">从 Vuex ≤4 迁移 <a class="header-anchor" href="#migrating-from-vuex-≤4" aria-hidden="true">#</a></h1><p>虽然 Vuex 和 Pinia store 的结构不同，但很多逻辑都可以复用。本指南的作用是帮助你完成迁移，并指出一些可能出现的常见问题。</p><h2 id="preparation" tabindex="-1">准备 <a class="header-anchor" href="#preparation" aria-hidden="true">#</a></h2><p>首先，按照<a href="./../getting-started.html">入门指南</a>安装 Pinia。</p><h2 id="restructuring-modules-to-stores" tabindex="-1">重构 store 的模块 <a class="header-anchor" href="#restructuring-modules-to-stores" aria-hidden="true">#</a></h2><p>Vuex 有一个概念，带有多个模块的单一 store。这些模块可以被命名，甚至可以互相嵌套。</p><p>将这个概念过渡到 Pinia 最简单的方法是，你以前使用的每个模块现在都是一个 <em>store</em>。每个 store 都需要一个 <code>id</code>，类似于 Vuex 中的命名空间。这意味着每个 store 都有命名空间的设计。嵌套模块也可以成为自己的 store。互相依赖的 store 可以直接导入其他 store。</p><p>你的 Vuex 模块如何重构为 Pinia store，完全取决于你，不过这里有一个示例：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;"># Vuex 示例(假设是命名模块)。</span></span>
<span class="line"><span style="color:#F6F6F4;">src</span></span>
<span class="line"><span style="color:#F6F6F4;">└── </span><span style="color:#E7EE98;">store</span></span>
<span class="line"><span style="color:#F6F6F4;">    ├── </span><span style="color:#E7EE98;">index.js</span><span style="color:#F6F6F4;">           </span><span style="color:#7B7F8B;"># 初始化 Vuex，导入模块</span></span>
<span class="line"><span style="color:#F6F6F4;">    └── </span><span style="color:#E7EE98;">modules</span></span>
<span class="line"><span style="color:#F6F6F4;">        ├── </span><span style="color:#E7EE98;">module1.js</span><span style="color:#F6F6F4;">     </span><span style="color:#7B7F8B;"># 命名模块 &#39;module1&#39;</span></span>
<span class="line"><span style="color:#F6F6F4;">        └── </span><span style="color:#E7EE98;">nested</span></span>
<span class="line"><span style="color:#F6F6F4;">            ├── </span><span style="color:#E7EE98;">index.js</span><span style="color:#F6F6F4;">   </span><span style="color:#7B7F8B;"># 命名模块 &#39;nested&#39;，导入 module2 与 module3</span></span>
<span class="line"><span style="color:#F6F6F4;">            ├── </span><span style="color:#E7EE98;">module2.js</span><span style="color:#F6F6F4;"> </span><span style="color:#7B7F8B;"># 命名模块 &#39;nested/module2&#39;</span></span>
<span class="line"><span style="color:#F6F6F4;">            └── </span><span style="color:#E7EE98;">module3.js</span><span style="color:#F6F6F4;"> </span><span style="color:#7B7F8B;"># 命名模块 &#39;nested/module3&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;"># Pinia 示例，注意 ID 与之前的命名模块相匹配</span></span>
<span class="line"><span style="color:#F6F6F4;">src</span></span>
<span class="line"><span style="color:#F6F6F4;">└── </span><span style="color:#E7EE98;">stores</span></span>
<span class="line"><span style="color:#F6F6F4;">    ├── </span><span style="color:#E7EE98;">index.js</span><span style="color:#F6F6F4;">          </span><span style="color:#7B7F8B;"># (可选) 初始化 Pinia，不必导入 store</span></span>
<span class="line"><span style="color:#F6F6F4;">    ├── </span><span style="color:#E7EE98;">module1.js</span><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;"># &#39;module1&#39; id</span></span>
<span class="line"><span style="color:#F6F6F4;">    ├── </span><span style="color:#E7EE98;">nested-module2.js</span><span style="color:#F6F6F4;"> </span><span style="color:#7B7F8B;"># &#39;nested/module2&#39; id</span></span>
<span class="line"><span style="color:#F6F6F4;">    ├── </span><span style="color:#E7EE98;">nested-module3.js</span><span style="color:#F6F6F4;"> </span><span style="color:#7B7F8B;"># &#39;nested/module3&#39; id</span></span>
<span class="line"><span style="color:#F6F6F4;">    └── </span><span style="color:#E7EE98;">nested.js</span><span style="color:#F6F6F4;">         </span><span style="color:#7B7F8B;"># &#39;nested&#39; id</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;"># Vuex 示例(假设是命名模块)。</span></span>
<span class="line"><span style="color:#59873A;">src</span></span>
<span class="line"><span style="color:#59873A;">└──</span><span style="color:#393A34;"> </span><span style="color:#B56959;">store</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">├──</span><span style="color:#393A34;"> </span><span style="color:#B56959;">index.js</span><span style="color:#393A34;">           </span><span style="color:#A0ADA0;"># 初始化 Vuex，导入模块</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">└──</span><span style="color:#393A34;"> </span><span style="color:#B56959;">modules</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#59873A;">├──</span><span style="color:#393A34;"> </span><span style="color:#B56959;">module1.js</span><span style="color:#393A34;">     </span><span style="color:#A0ADA0;"># 命名模块 &#39;module1&#39;</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#59873A;">└──</span><span style="color:#393A34;"> </span><span style="color:#B56959;">nested</span></span>
<span class="line"><span style="color:#393A34;">            </span><span style="color:#59873A;">├──</span><span style="color:#393A34;"> </span><span style="color:#B56959;">index.js</span><span style="color:#393A34;">   </span><span style="color:#A0ADA0;"># 命名模块 &#39;nested&#39;，导入 module2 与 module3</span></span>
<span class="line"><span style="color:#393A34;">            </span><span style="color:#59873A;">├──</span><span style="color:#393A34;"> </span><span style="color:#B56959;">module2.js</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;"># 命名模块 &#39;nested/module2&#39;</span></span>
<span class="line"><span style="color:#393A34;">            </span><span style="color:#59873A;">└──</span><span style="color:#393A34;"> </span><span style="color:#B56959;">module3.js</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;"># 命名模块 &#39;nested/module3&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;"># Pinia 示例，注意 ID 与之前的命名模块相匹配</span></span>
<span class="line"><span style="color:#59873A;">src</span></span>
<span class="line"><span style="color:#59873A;">└──</span><span style="color:#393A34;"> </span><span style="color:#B56959;">stores</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">├──</span><span style="color:#393A34;"> </span><span style="color:#B56959;">index.js</span><span style="color:#393A34;">          </span><span style="color:#A0ADA0;"># (可选) 初始化 Pinia，不必导入 store</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">├──</span><span style="color:#393A34;"> </span><span style="color:#B56959;">module1.js</span><span style="color:#393A34;">        </span><span style="color:#A0ADA0;"># &#39;module1&#39; id</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">├──</span><span style="color:#393A34;"> </span><span style="color:#B56959;">nested-module2.js</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;"># &#39;nested/module2&#39; id</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">├──</span><span style="color:#393A34;"> </span><span style="color:#B56959;">nested-module3.js</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;"># &#39;nested/module3&#39; id</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">└──</span><span style="color:#393A34;"> </span><span style="color:#B56959;">nested.js</span><span style="color:#393A34;">         </span><span style="color:#A0ADA0;"># &#39;nested&#39; id</span></span>
<span class="line"></span></code></pre></div><p>这为 store 创建了一个扁平的结构，但也保留了和之前等价的 <code>id</code> 命名方式。如果你在根 store (在 Vuex 的 <code>store/index.js</code> 文件中)中有一些 state/getter/action/mutation，你可以创建一个名为 <code>root</code> 的 store，来保存它们。</p><p>Pinia 的目录一般被命名为 <code>stores</code> 而不是 <code>store</code>。这是为了强调 Pinia 可以使用多个 store，而不是 Vuex 的单一 store。</p><p>对于大型项目，你可能希望逐个模块进行转换，而不是一次性全部转换。其实在迁移过程中，你可以同时使用 Pinia 和 Vuex。这样也完全可以正常工作，这也是将 Pinia 目录命名为 <code>stores</code> 的另一个原因。</p><h2 id="converting-a-single-module" tabindex="-1">转换单个模块 <a class="header-anchor" href="#converting-a-single-module" aria-hidden="true">#</a></h2><p>下面有一个完整的例子，介绍了将 Vuex 模块转换为 Pinia store 的完整过程，请看下面的逐步指南。Pinia 的例子使用了一个 option store，因为其结构与 Vuex 最为相似。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">// &#39;auth/user&#39; 命名空间中的 Vuex 模块</span></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> { Module } </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">vuex</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> { api } </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">@/api</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> { RootState } </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">@/types</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;"> </span><span style="color:#7B7F8B;">// 如果需要使用 Vuex 的类型便需要引入</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">interface</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">State</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  firstName</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">string</span></span>
<span class="line"><span style="color:#F6F6F4;">  lastName</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">string</span></span>
<span class="line"><span style="color:#F6F6F4;">  userId</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">number</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">|</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">null</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> storeModule</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">Module</span><span style="color:#F6F6F4;">&lt;</span><span style="color:#FFB86C;font-style:italic;">State</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">RootState</span><span style="color:#F6F6F4;">&gt; </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  namespaced</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  state</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    firstName</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    lastName</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    userId</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">null</span></span>
<span class="line"><span style="color:#F6F6F4;">  },</span></span>
<span class="line"><span style="color:#F6F6F4;">  getters</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">firstName</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">state</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> state.firstName,</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">fullName</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">state</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">\`</span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">state.firstName</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;"> </span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">state.lastName</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;">\`</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">loggedIn</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">state</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> state.userId </span><span style="color:#F286C4;">!==</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">null</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// 与其他模块的一些状态相结合</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">fullUserDetails</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">state</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">getters</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">rootState</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">rootGetters</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">...</span><span style="color:#F6F6F4;">state,</span></span>
<span class="line"><span style="color:#F6F6F4;">        fullName</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> getters.fullName,</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 读取另一个名为 \`auth\` 模块的 state</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">...</span><span style="color:#F6F6F4;">rootState.auth.preferences,</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// 读取嵌套于 \`auth\` 模块的 \`email\` 模块的 getter</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">...</span><span style="color:#F6F6F4;">rootGetters[</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">auth/email</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">].details</span></span>
<span class="line"><span style="color:#F6F6F4;">      }</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">  },</span></span>
<span class="line"><span style="color:#F6F6F4;">  actions</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">async</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">loadUser</span><span style="color:#F6F6F4;"> ({ </span><span style="color:#FFB86C;font-style:italic;">state</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">commit</span><span style="color:#F6F6F4;"> }, </span><span style="color:#FFB86C;font-style:italic;">id</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">number</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (state.userId </span><span style="color:#F286C4;">!==</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">null</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">throw</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Error</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">Already logged in</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> res </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">await</span><span style="color:#F6F6F4;"> api.user.</span><span style="color:#62E884;">load</span><span style="color:#F6F6F4;">(id)</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#62E884;">commit</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">updateUser</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, res)</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">  },</span></span>
<span class="line"><span style="color:#F6F6F4;">  mutations</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">updateUser</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">state</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">payload</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">      state.firstName </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> payload.firstName</span></span>
<span class="line"><span style="color:#F6F6F4;">      state.lastName </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> payload.lastName</span></span>
<span class="line"><span style="color:#F6F6F4;">      state.userId </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> payload.userId</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">clearUser</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">state</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">      state.firstName </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;&#39;</span></span>
<span class="line"><span style="color:#F6F6F4;">      state.lastName </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;&#39;</span></span>
<span class="line"><span style="color:#F6F6F4;">      state.userId </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">null</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">export</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">default</span><span style="color:#F6F6F4;"> storeModule</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// &#39;auth/user&#39; 命名空间中的 Vuex 模块</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">Module</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">vuex</span><span style="color:#B56959AA;">&#39;</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">api</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">@/api</span><span style="color:#B56959AA;">&#39;</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">RootState</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">@/types</span><span style="color:#B56959AA;">&#39;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 如果需要使用 Vuex 的类型便需要引入</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">interface</span><span style="color:#393A34;"> </span><span style="color:#2E808F;">State</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">firstName</span><span style="color:#999999;">: </span><span style="color:#2E808F;">string</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">lastName</span><span style="color:#999999;">: </span><span style="color:#2E808F;">string</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">userId</span><span style="color:#999999;">: </span><span style="color:#2E808F;">number</span><span style="color:#999999;"> | </span><span style="color:#AB5959;">null</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">const </span><span style="color:#B07D48;">storeModule</span><span style="color:#999999;">: </span><span style="color:#2E808F;">Module</span><span style="color:#999999;">&lt;</span><span style="color:#2E808F;">State</span><span style="color:#999999;">, </span><span style="color:#2E808F;">RootState</span><span style="color:#999999;">&gt; </span><span style="color:#AB5959;">= </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#998418;">namespaced</span><span style="color:#999999;">: </span><span style="color:#1E754F;">true</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#998418;">state</span><span style="color:#999999;">: {</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#998418;">firstName</span><span style="color:#999999;">: </span><span style="color:#B56959AA;">&#39;&#39;</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#998418;">lastName</span><span style="color:#999999;">: </span><span style="color:#B56959AA;">&#39;&#39;</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#998418;">userId</span><span style="color:#999999;">: </span><span style="color:#AB5959;">null</span></span>
<span class="line"><span style="color:#999999;">  },</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#998418;">getters</span><span style="color:#999999;">: {</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#59873A;">firstName</span><span style="color:#999999;">: (</span><span style="color:#B07D48;">state</span><span style="color:#999999;">) =&gt; </span><span style="color:#B07D48;">state</span><span style="color:#999999;">.</span><span style="color:#B07D48;">firstName</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#59873A;">fullName</span><span style="color:#999999;">: (</span><span style="color:#B07D48;">state</span><span style="color:#999999;">) =&gt; </span><span style="color:#B56959AA;">\`</span><span style="color:#999999;">\${</span><span style="color:#B56959;">state</span><span style="color:#999999;">.</span><span style="color:#B56959;">firstName</span><span style="color:#999999;">}</span><span style="color:#B56959;"> </span><span style="color:#999999;">\${</span><span style="color:#B56959;">state</span><span style="color:#999999;">.</span><span style="color:#B56959;">lastName</span><span style="color:#999999;">}</span><span style="color:#B56959AA;">\`</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#59873A;">loggedIn</span><span style="color:#999999;">: (</span><span style="color:#B07D48;">state</span><span style="color:#999999;">) =&gt; </span><span style="color:#B07D48;">state</span><span style="color:#999999;">.</span><span style="color:#B07D48;">userId</span><span style="color:#999999;"> </span><span style="color:#AB5959;">!==</span><span style="color:#999999;"> </span><span style="color:#AB5959;">null</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// 与其他模块的一些状态相结合</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#59873A;">fullUserDetails</span><span style="color:#999999;">: (</span><span style="color:#B07D48;">state</span><span style="color:#999999;">, </span><span style="color:#B07D48;">getters</span><span style="color:#999999;">, </span><span style="color:#B07D48;">rootState</span><span style="color:#999999;">, </span><span style="color:#B07D48;">rootGetters</span><span style="color:#999999;">) =&gt; {</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#1E754F;">return</span><span style="color:#999999;"> {</span></span>
<span class="line"><span style="color:#999999;">        ...</span><span style="color:#B07D48;">state</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">        </span><span style="color:#998418;">fullName</span><span style="color:#999999;">: </span><span style="color:#B07D48;">getters</span><span style="color:#999999;">.</span><span style="color:#B07D48;">fullName</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">        </span><span style="color:#A0ADA0;">// 读取另一个名为 \`auth\` 模块的 state</span></span>
<span class="line"><span style="color:#999999;">        ...</span><span style="color:#B07D48;">rootState</span><span style="color:#999999;">.</span><span style="color:#B07D48;">auth</span><span style="color:#999999;">.</span><span style="color:#B07D48;">preferences</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">        </span><span style="color:#A0ADA0;">// 读取嵌套于 \`auth\` 模块的 \`email\` 模块的 getter</span></span>
<span class="line"><span style="color:#999999;">        ...</span><span style="color:#B07D48;">rootGetters</span><span style="color:#999999;">[</span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">auth/email</span><span style="color:#B56959AA;">&#39;</span><span style="color:#999999;">].</span><span style="color:#B07D48;">details</span></span>
<span class="line"><span style="color:#999999;">      }</span></span>
<span class="line"><span style="color:#999999;">    }</span></span>
<span class="line"><span style="color:#999999;">  },</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#998418;">actions</span><span style="color:#999999;">: {</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#AB5959;">async</span><span style="color:#999999;"> </span><span style="color:#59873A;">loadUser</span><span style="color:#999999;"> ({ </span><span style="color:#B07D48;">state</span><span style="color:#999999;">, </span><span style="color:#B07D48;">commit</span><span style="color:#999999;"> }, </span><span style="color:#B07D48;">id</span><span style="color:#999999;">: </span><span style="color:#2E808F;">number</span><span style="color:#999999;">) {</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#1E754F;">if</span><span style="color:#999999;"> (</span><span style="color:#B07D48;">state</span><span style="color:#999999;">.</span><span style="color:#B07D48;">userId</span><span style="color:#999999;"> </span><span style="color:#AB5959;">!==</span><span style="color:#999999;"> </span><span style="color:#AB5959;">null</span><span style="color:#999999;">) </span><span style="color:#1E754F;">throw</span><span style="color:#999999;"> </span><span style="color:#AB5959;">new</span><span style="color:#999999;"> </span><span style="color:#59873A;">Error</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">Already logged in</span><span style="color:#B56959AA;">&#39;</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">res</span><span style="color:#AB5959;"> = </span><span style="color:#1E754F;">await</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">api</span><span style="color:#999999;">.</span><span style="color:#B07D48;">user</span><span style="color:#999999;">.</span><span style="color:#59873A;">load</span><span style="color:#999999;">(</span><span style="color:#B07D48;">id</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#59873A;">commit</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">updateUser</span><span style="color:#B56959AA;">&#39;</span><span style="color:#999999;">, </span><span style="color:#B07D48;">res</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#999999;">    }</span></span>
<span class="line"><span style="color:#999999;">  },</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#998418;">mutations</span><span style="color:#999999;">: {</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#59873A;">updateUser</span><span style="color:#999999;"> (</span><span style="color:#B07D48;">state</span><span style="color:#999999;">, </span><span style="color:#B07D48;">payload</span><span style="color:#999999;">) {</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#B07D48;">state</span><span style="color:#999999;">.</span><span style="color:#B07D48;">firstName</span><span style="color:#999999;"> </span><span style="color:#AB5959;">=</span><span style="color:#999999;"> </span><span style="color:#B07D48;">payload</span><span style="color:#999999;">.</span><span style="color:#B07D48;">firstName</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#B07D48;">state</span><span style="color:#999999;">.</span><span style="color:#B07D48;">lastName</span><span style="color:#999999;"> </span><span style="color:#AB5959;">=</span><span style="color:#999999;"> </span><span style="color:#B07D48;">payload</span><span style="color:#999999;">.</span><span style="color:#B07D48;">lastName</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#B07D48;">state</span><span style="color:#999999;">.</span><span style="color:#B07D48;">userId</span><span style="color:#999999;"> </span><span style="color:#AB5959;">=</span><span style="color:#999999;"> </span><span style="color:#B07D48;">payload</span><span style="color:#999999;">.</span><span style="color:#B07D48;">userId</span></span>
<span class="line"><span style="color:#999999;">    },</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#59873A;">clearUser</span><span style="color:#999999;"> (</span><span style="color:#B07D48;">state</span><span style="color:#999999;">) {</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#B07D48;">state</span><span style="color:#999999;">.</span><span style="color:#B07D48;">firstName</span><span style="color:#999999;"> </span><span style="color:#AB5959;">=</span><span style="color:#999999;"> </span><span style="color:#B56959AA;">&#39;&#39;</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#B07D48;">state</span><span style="color:#999999;">.</span><span style="color:#B07D48;">lastName</span><span style="color:#999999;"> </span><span style="color:#AB5959;">=</span><span style="color:#999999;"> </span><span style="color:#B56959AA;">&#39;&#39;</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#B07D48;">state</span><span style="color:#999999;">.</span><span style="color:#B07D48;">userId</span><span style="color:#999999;"> </span><span style="color:#AB5959;">=</span><span style="color:#999999;"> </span><span style="color:#AB5959;">null</span></span>
<span class="line"><span style="color:#999999;">    }</span></span>
<span class="line"><span style="color:#999999;">  }</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">default</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">storeModule</span></span>
<span class="line"></span></code></pre></div><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">// Pinia Store</span></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> { defineStore } </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">pinia</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> { useAuthPreferencesStore } </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">./auth-preferences</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> { useAuthEmailStore } </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">./auth-email</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> vuexStore </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">@/store</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;"> </span><span style="color:#7B7F8B;">// 逐步转换，见 fullUserDetails</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">interface</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">State</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  firstName</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">string</span></span>
<span class="line"><span style="color:#F6F6F4;">  lastName</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">string</span></span>
<span class="line"><span style="color:#F6F6F4;">  userId</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">number</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">|</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">null</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">export</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> useAuthUserStore </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">defineStore</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">auth/user</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">, {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// 转换为函数</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#62E884;">state</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> ()</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">State</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> ({</span></span>
<span class="line"><span style="color:#F6F6F4;">    firstName</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    lastName</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    userId</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">null</span></span>
<span class="line"><span style="color:#F6F6F4;">  }),</span></span>
<span class="line"><span style="color:#F6F6F4;">  getters</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// 不在需要 firstName getter，移除</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">fullName</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">state</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> </span><span style="color:#E7EE98;">\`</span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">state.firstName</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;"> </span><span style="color:#F286C4;">\${</span><span style="color:#F6F6F4;">state.lastName</span><span style="color:#F286C4;">}</span><span style="color:#E7EE98;">\`</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">loggedIn</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">state</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> state.userId </span><span style="color:#F286C4;">!==</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">null</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// 由于使用了 \`this\`，必须定义一个返回类型</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">fullUserDetails</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">state</span><span style="color:#F6F6F4;">)</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">FullUserDetails</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#7B7F8B;">// 导入其他 store</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> authPreferencesStore </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">useAuthPreferencesStore</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> authEmailStore </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">useAuthEmailStore</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">...</span><span style="color:#F6F6F4;">state,</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#7B7F8B;">// \`this\` 上的其他 getter</span></span>
<span class="line"><span style="color:#F6F6F4;">        fullName</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.fullName,</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">...</span><span style="color:#F6F6F4;">authPreferencesStore.$state,</span></span>
<span class="line"><span style="color:#F6F6F4;">        </span><span style="color:#F286C4;">...</span><span style="color:#F6F6F4;">authEmailStore.details</span></span>
<span class="line"><span style="color:#F6F6F4;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#7B7F8B;">// 如果其他模块仍在 Vuex 中，可替代为</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#7B7F8B;">// return {</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#7B7F8B;">//   ...state,</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#7B7F8B;">//   fullName: this.fullName,</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#7B7F8B;">//   ...vuexStore.state.auth.preferences,</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#7B7F8B;">//   ...vuexStore.getters[&#39;auth/email&#39;].details</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#7B7F8B;">// }</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">  },</span></span>
<span class="line"><span style="color:#F6F6F4;">  actions</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">//没有作为第一个参数的上下文，用 \`this\` 代替</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">async</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">loadUser</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">id</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">number</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (</span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.userId </span><span style="color:#F286C4;">!==</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">null</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">throw</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;font-weight:bold;">new</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">Error</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">Already logged in</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> res </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">await</span><span style="color:#F6F6F4;"> api.user.</span><span style="color:#62E884;">load</span><span style="color:#F6F6F4;">(id)</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.</span><span style="color:#62E884;">updateUser</span><span style="color:#F6F6F4;">(res)</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// mutation 现在可以成为 action 了，不再用 \`state\` 作为第一个参数，而是用 \`this\`。</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">updateUser</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">payload</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.firstName </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> payload.firstName</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.lastName </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> payload.lastName</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.userId </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> payload.userId</span></span>
<span class="line"><span style="color:#F6F6F4;">    },</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#7B7F8B;">// 使用 \`$reset\` 可以轻松重置 state</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">clearUser</span><span style="color:#F6F6F4;"> () {</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#BF9EEE;font-style:italic;">this</span><span style="color:#F6F6F4;">.</span><span style="color:#62E884;">$reset</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// Pinia Store</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">defineStore</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">pinia</span><span style="color:#B56959AA;">&#39;</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">useAuthPreferencesStore</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">./auth-preferences</span><span style="color:#B56959AA;">&#39;</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">useAuthEmailStore</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">./auth-email</span><span style="color:#B56959AA;">&#39;</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">vuexStore</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">@/store</span><span style="color:#B56959AA;">&#39;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 逐步转换，见 fullUserDetails</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">interface</span><span style="color:#393A34;"> </span><span style="color:#2E808F;">State</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">firstName</span><span style="color:#999999;">: </span><span style="color:#2E808F;">string</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">lastName</span><span style="color:#999999;">: </span><span style="color:#2E808F;">string</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">userId</span><span style="color:#999999;">: </span><span style="color:#2E808F;">number</span><span style="color:#999999;"> | </span><span style="color:#AB5959;">null</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#AB5959;"> const </span><span style="color:#B07D48;">useAuthUserStore</span><span style="color:#AB5959;"> = </span><span style="color:#59873A;">defineStore</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">auth/user</span><span style="color:#B56959AA;">&#39;</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// 转换为函数</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#59873A;">state</span><span style="color:#999999;">: (): </span><span style="color:#2E808F;">State</span><span style="color:#999999;"> =&gt; ({</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#998418;">firstName</span><span style="color:#999999;">: </span><span style="color:#B56959AA;">&#39;&#39;</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#998418;">lastName</span><span style="color:#999999;">: </span><span style="color:#B56959AA;">&#39;&#39;</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#998418;">userId</span><span style="color:#999999;">: </span><span style="color:#AB5959;">null</span></span>
<span class="line"><span style="color:#999999;">  }),</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#998418;">getters</span><span style="color:#999999;">: {</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// 不在需要 firstName getter，移除</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#59873A;">fullName</span><span style="color:#999999;">: (</span><span style="color:#B07D48;">state</span><span style="color:#999999;">) =&gt; </span><span style="color:#B56959AA;">\`</span><span style="color:#999999;">\${</span><span style="color:#B56959;">state</span><span style="color:#999999;">.</span><span style="color:#B56959;">firstName</span><span style="color:#999999;">}</span><span style="color:#B56959;"> </span><span style="color:#999999;">\${</span><span style="color:#B56959;">state</span><span style="color:#999999;">.</span><span style="color:#B56959;">lastName</span><span style="color:#999999;">}</span><span style="color:#B56959AA;">\`</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#59873A;">loggedIn</span><span style="color:#999999;">: (</span><span style="color:#B07D48;">state</span><span style="color:#999999;">) =&gt; </span><span style="color:#B07D48;">state</span><span style="color:#999999;">.</span><span style="color:#B07D48;">userId</span><span style="color:#999999;"> </span><span style="color:#AB5959;">!==</span><span style="color:#999999;"> </span><span style="color:#AB5959;">null</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// 由于使用了 \`this\`，必须定义一个返回类型</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#59873A;">fullUserDetails</span><span style="color:#999999;"> (</span><span style="color:#B07D48;">state</span><span style="color:#999999;">): </span><span style="color:#2E808F;">FullUserDetails</span><span style="color:#999999;"> {</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#A0ADA0;">// 导入其他 store</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">authPreferencesStore</span><span style="color:#AB5959;"> = </span><span style="color:#59873A;">useAuthPreferencesStore</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">authEmailStore</span><span style="color:#AB5959;"> = </span><span style="color:#59873A;">useAuthEmailStore</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#1E754F;">return</span><span style="color:#999999;"> {</span></span>
<span class="line"><span style="color:#999999;">        ...</span><span style="color:#B07D48;">state</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">        </span><span style="color:#A0ADA0;">// \`this\` 上的其他 getter</span></span>
<span class="line"><span style="color:#999999;">        </span><span style="color:#998418;">fullName</span><span style="color:#999999;">: </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">fullName</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">        ...</span><span style="color:#B07D48;">authPreferencesStore</span><span style="color:#999999;">.</span><span style="color:#B07D48;">$state</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">        ...</span><span style="color:#B07D48;">authEmailStore</span><span style="color:#999999;">.</span><span style="color:#B07D48;">details</span></span>
<span class="line"><span style="color:#999999;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#A0ADA0;">// 如果其他模块仍在 Vuex 中，可替代为</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#A0ADA0;">// return {</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#A0ADA0;">//   ...state,</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#A0ADA0;">//   fullName: this.fullName,</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#A0ADA0;">//   ...vuexStore.state.auth.preferences,</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#A0ADA0;">//   ...vuexStore.getters[&#39;auth/email&#39;].details</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#A0ADA0;">// }</span></span>
<span class="line"><span style="color:#999999;">    }</span></span>
<span class="line"><span style="color:#999999;">  },</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#998418;">actions</span><span style="color:#999999;">: {</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">//没有作为第一个参数的上下文，用 \`this\` 代替</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#AB5959;">async</span><span style="color:#999999;"> </span><span style="color:#59873A;">loadUser</span><span style="color:#999999;"> (</span><span style="color:#B07D48;">id</span><span style="color:#999999;">: </span><span style="color:#2E808F;">number</span><span style="color:#999999;">) {</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#1E754F;">if</span><span style="color:#999999;"> (</span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">userId</span><span style="color:#999999;"> </span><span style="color:#AB5959;">!==</span><span style="color:#999999;"> </span><span style="color:#AB5959;">null</span><span style="color:#999999;">) </span><span style="color:#1E754F;">throw</span><span style="color:#999999;"> </span><span style="color:#AB5959;">new</span><span style="color:#999999;"> </span><span style="color:#59873A;">Error</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">Already logged in</span><span style="color:#B56959AA;">&#39;</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">res</span><span style="color:#AB5959;"> = </span><span style="color:#1E754F;">await</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">api</span><span style="color:#999999;">.</span><span style="color:#B07D48;">user</span><span style="color:#999999;">.</span><span style="color:#59873A;">load</span><span style="color:#999999;">(</span><span style="color:#B07D48;">id</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#59873A;">updateUser</span><span style="color:#999999;">(</span><span style="color:#B07D48;">res</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#999999;">    },</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// mutation 现在可以成为 action 了，不再用 \`state\` 作为第一个参数，而是用 \`this\`。</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#59873A;">updateUser</span><span style="color:#999999;"> (</span><span style="color:#B07D48;">payload</span><span style="color:#999999;">) {</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">firstName</span><span style="color:#999999;"> </span><span style="color:#AB5959;">=</span><span style="color:#999999;"> </span><span style="color:#B07D48;">payload</span><span style="color:#999999;">.</span><span style="color:#B07D48;">firstName</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">lastName</span><span style="color:#999999;"> </span><span style="color:#AB5959;">=</span><span style="color:#999999;"> </span><span style="color:#B07D48;">payload</span><span style="color:#999999;">.</span><span style="color:#B07D48;">lastName</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">userId</span><span style="color:#999999;"> </span><span style="color:#AB5959;">=</span><span style="color:#999999;"> </span><span style="color:#B07D48;">payload</span><span style="color:#999999;">.</span><span style="color:#B07D48;">userId</span></span>
<span class="line"><span style="color:#999999;">    },</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// 使用 \`$reset\` 可以轻松重置 state</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#59873A;">clearUser</span><span style="color:#999999;"> () {</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#59873A;">$reset</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#999999;">    }</span></span>
<span class="line"><span style="color:#999999;">  }</span></span>
<span class="line"><span style="color:#999999;">})</span></span>
<span class="line"></span></code></pre></div><p>让我们把上述内容分解成几个步骤：</p><ol><li>为 store 添加一个必要的 <code>id</code>，你可以让它与之前的命名保持相同。</li><li>如果 <code>state</code> 不是一个函数的话 将它转换为一个函数。</li><li>转换 <code>getters</code><ol><li>删除任何返回同名 state 的 getters (例如： <code>firstName: (state) =&gt; state.firstName</code>)，这些都不是必需的，因为你可以直接从 store 实例中访问任何状态。</li><li>如果你需要访问其他的 getter，可通过 <code>this</code> 访问它们，而不是第二个参数。记住，如果你使用 <code>this</code>，而且你不得不使用一个普通函数，而不是一个箭头函数，那么由于 TS 的限制，你需要指定一个返回类型，更多细节请阅读<a href="./../core-concepts/getters.html#accessing-other-getters">这篇文档</a></li><li>如果使用 <code>rootState</code> 或 <code>rootGetters</code> 参数，可以直接导入其他 store 来替代它们，或者如果它们仍然存在于 Vuex ，则直接从 Vuex 中访问它们。</li></ol></li><li>转换 <code>actions</code><ol><li>从每个 action 中删除第一个 <code>context</code> 参数。所有的东西都应该直接从 <code>this</code> 中访问。</li><li>如果使用其他 store，要么直接导入，要么与 getters 一样，在 Vuex 上访问。</li></ol></li><li>转换 <code>mutations</code><ol><li>Mutation 已经被弃用了。它们可以被转换为 <code>action</code>，或者你可以在你的组件中直接赋值给 store (例如：<code>userStore.firstName = &#39;First&#39;</code>)</li><li>如果你想将它转换为 action，删除第一个 <code>state</code> 参数，用 <code>this</code> 代替任何赋值操作中的 <code>state</code>。</li><li>一个常见的 mutation 是将 state 重置为初始 state。而这就是 store 的 <code>$reset</code> 方法的内置功能。注意，这个功能只存在于 option stores。</li></ol></li></ol><p>正如你所看到的，你的大部分代码都可以被重复使用。如果有什么遗漏，类型安全也应该可以帮助你确定需要修改的地方。</p><h2 id="usage-inside-components" tabindex="-1">组件内的使用 <a class="header-anchor" href="#usage-inside-components" aria-hidden="true">#</a></h2><p>现在你的 Vuex 模块已经被转换为 Pinia store，但其他使用该模块的组件或文件也需要更新。</p><p>如果你以前使用的是 Vuex 的 <code>map</code> 辅助函数，可以看看<a href="./options-api.html">不使用 setup() 的用法指南</a>，因为这些辅助函数大多都是可以复用的。</p><p>如果你以前使用的是 <code>useStore</code>，那么就直接导入新 store 并访问其上的 state。比如说：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">// Vuex</span></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> { defineComponent, computed } </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">vue</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> { useStore } </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">vuex</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">export</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">default</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">defineComponent</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#62E884;">setup</span><span style="color:#F6F6F4;"> () {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> store </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">useStore</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> firstName </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">computed</span><span style="color:#F6F6F4;">(() </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> store.state.auth.user.firstName)</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> fullName </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">computed</span><span style="color:#F6F6F4;">(() </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> store.getters[</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">auth/user/fullName</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">      firstName,</span></span>
<span class="line"><span style="color:#F6F6F4;">      fullName</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// Vuex</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">defineComponent</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">computed</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">vue</span><span style="color:#B56959AA;">&#39;</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">useStore</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">vuex</span><span style="color:#B56959AA;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">default</span><span style="color:#393A34;"> </span><span style="color:#59873A;">defineComponent</span><span style="color:#999999;">({</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#59873A;">setup</span><span style="color:#999999;"> () {</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">store</span><span style="color:#AB5959;"> = </span><span style="color:#59873A;">useStore</span><span style="color:#999999;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">firstName</span><span style="color:#AB5959;"> = </span><span style="color:#59873A;">computed</span><span style="color:#999999;">(()</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">store</span><span style="color:#999999;">.</span><span style="color:#B07D48;">state</span><span style="color:#999999;">.</span><span style="color:#B07D48;">auth</span><span style="color:#999999;">.</span><span style="color:#B07D48;">user</span><span style="color:#999999;">.</span><span style="color:#B07D48;">firstName</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">fullName</span><span style="color:#AB5959;"> = </span><span style="color:#59873A;">computed</span><span style="color:#999999;">(()</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">store</span><span style="color:#999999;">.</span><span style="color:#B07D48;">getters</span><span style="color:#999999;">[</span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">auth/user/fullName</span><span style="color:#B56959AA;">&#39;</span><span style="color:#999999;">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#1E754F;">return</span><span style="color:#999999;"> {</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#B07D48;">firstName</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#B07D48;">fullName</span></span>
<span class="line"><span style="color:#999999;">    }</span></span>
<span class="line"><span style="color:#999999;">  }</span></span>
<span class="line"><span style="color:#999999;">})</span></span>
<span class="line"></span></code></pre></div><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">// Pinia</span></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> { defineComponent, computed } </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">vue</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> { useAuthUserStore } </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">@/stores/auth-user</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">export</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">default</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">defineComponent</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#62E884;">setup</span><span style="color:#F6F6F4;"> () {</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> authUserStore </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">useAuthUserStore</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> firstName </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">computed</span><span style="color:#F6F6F4;">(() </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> authUserStore.firstName)</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> fullName </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">computed</span><span style="color:#F6F6F4;">(() </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> authUserStore.fullName)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#7B7F8B;">// 你也可以在你的组件中通过返回 store 来访问整个 store</span></span>
<span class="line"><span style="color:#F6F6F4;">      authUserStore,</span></span>
<span class="line"><span style="color:#F6F6F4;">      firstName,</span></span>
<span class="line"><span style="color:#F6F6F4;">      fullName</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// Pinia</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">defineComponent</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">computed</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">vue</span><span style="color:#B56959AA;">&#39;</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">useAuthUserStore</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">@/stores/auth-user</span><span style="color:#B56959AA;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">default</span><span style="color:#393A34;"> </span><span style="color:#59873A;">defineComponent</span><span style="color:#999999;">({</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#59873A;">setup</span><span style="color:#999999;"> () {</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">authUserStore</span><span style="color:#AB5959;"> = </span><span style="color:#59873A;">useAuthUserStore</span><span style="color:#999999;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">firstName</span><span style="color:#AB5959;"> = </span><span style="color:#59873A;">computed</span><span style="color:#999999;">(()</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">authUserStore</span><span style="color:#999999;">.</span><span style="color:#B07D48;">firstName</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">fullName</span><span style="color:#AB5959;"> = </span><span style="color:#59873A;">computed</span><span style="color:#999999;">(()</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">authUserStore</span><span style="color:#999999;">.</span><span style="color:#B07D48;">fullName</span><span style="color:#999999;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#1E754F;">return</span><span style="color:#999999;"> {</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#A0ADA0;">// 你也可以在你的组件中通过返回 store 来访问整个 store</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#B07D48;">authUserStore</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#B07D48;">firstName</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#B07D48;">fullName</span></span>
<span class="line"><span style="color:#999999;">    }</span></span>
<span class="line"><span style="color:#999999;">  }</span></span>
<span class="line"><span style="color:#999999;">})</span></span>
<span class="line"></span></code></pre></div><h2 id="usage-outside-components" tabindex="-1">组件外的使用 <a class="header-anchor" href="#usage-outside-components" aria-hidden="true">#</a></h2><p>只要你注意<strong>不在函数外使用 store</strong>，单独更新组件外的用法应该很简单。下面是一个在 Vue Router 导航守卫中使用 store 的例子：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">// Vuex</span></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> vuexStore </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">@/store</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">router.</span><span style="color:#62E884;">beforeEach</span><span style="color:#F6F6F4;">((</span><span style="color:#FFB86C;font-style:italic;">to</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">from</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">next</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (vuexStore.getters[</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">auth/user/loggedIn</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">]) </span><span style="color:#62E884;">next</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">else</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">next</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">/login</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// Vuex</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">vuexStore</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">@/store</span><span style="color:#B56959AA;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B07D48;">router</span><span style="color:#999999;">.</span><span style="color:#59873A;">beforeEach</span><span style="color:#999999;">((</span><span style="color:#B07D48;">to</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">from</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">next</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">vuexStore</span><span style="color:#999999;">.</span><span style="color:#B07D48;">getters</span><span style="color:#999999;">[</span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">auth/user/loggedIn</span><span style="color:#B56959AA;">&#39;</span><span style="color:#999999;">])</span><span style="color:#393A34;"> </span><span style="color:#59873A;">next</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">else</span><span style="color:#393A34;"> </span><span style="color:#59873A;">next</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">/login</span><span style="color:#B56959AA;">&#39;</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#999999;">})</span></span>
<span class="line"></span></code></pre></div><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki dracula-soft vp-code-dark"><code><span class="line"><span style="color:#7B7F8B;">// Pinia</span></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> { useAuthUserStore } </span><span style="color:#F286C4;">from</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">@/stores/auth-user</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">router.</span><span style="color:#62E884;">beforeEach</span><span style="color:#F6F6F4;">((</span><span style="color:#FFB86C;font-style:italic;">to</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">from</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">next</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// 必须在函数内部使用</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> authUserStore </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">useAuthUserStore</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (authUserStore.loggedIn) </span><span style="color:#62E884;">next</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">else</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">next</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">/login</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// Pinia</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">useAuthUserStore</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">@/stores/auth-user</span><span style="color:#B56959AA;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B07D48;">router</span><span style="color:#999999;">.</span><span style="color:#59873A;">beforeEach</span><span style="color:#999999;">((</span><span style="color:#B07D48;">to</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">from</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">next</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// 必须在函数内部使用</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">authUserStore</span><span style="color:#AB5959;"> = </span><span style="color:#59873A;">useAuthUserStore</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">authUserStore</span><span style="color:#999999;">.</span><span style="color:#B07D48;">loggedIn</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#59873A;">next</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">else</span><span style="color:#393A34;"> </span><span style="color:#59873A;">next</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">/login</span><span style="color:#B56959AA;">&#39;</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#999999;">})</span></span>
<span class="line"></span></code></pre></div><p>更多细节可在<a href="./../core-concepts/outside-component-usage.html">这里</a>找到。</p><h2 id="advanced-vuex-usage" tabindex="-1">Vuex 高级用法 <a class="header-anchor" href="#advanced-vuex-usage" aria-hidden="true">#</a></h2><p>如果你的 Vuex store 使用了它所提供的一些更高级的功能，也有一些关于如何在 Pinia 中实现同样效果的指导。其中一些要点已经包含在这个<a href="./../introduction.html#comparison-with-vuex-3-x-4-x">对比总结</a>里了。</p><h3 id="dynamic-modules" tabindex="-1">动态模块 <a class="header-anchor" href="#dynamic-modules" aria-hidden="true">#</a></h3><p>在 Pinia 中不需要动态注册模块。store 设计之初就是动态的，只有在需要时才会被注册。如果一个 store 从未被使用过，它就永远不会被 “注册”。</p><h3 id="hot-module-replacement" tabindex="-1">热更新 <a class="header-anchor" href="#hot-module-replacement" aria-hidden="true">#</a></h3><p>支持 HMR，但需要一些修改，见<a href="./hot-module-replacement.html">HMR 指南</a>。</p><h3 id="plugins" tabindex="-1">插件 <a class="header-anchor" href="#plugins" aria-hidden="true">#</a></h3><p>如果你使用的是一个公共的 Vuex 插件，那么请检查是否有一个 Pinia 版的替代品。如果没有，你就需要自己写一个，或者评估一下是否还有必要使用这个插件。</p><p>如果你已经写了一个自己的插件，那么你完全可以更新它来适配 pinia，参考<a href="./../core-concepts/plugins.html">插件指南</a>。</p>`,39),e=[o];function t(c,r,y,F,i,A){return n(),a("div",null,e)}const B=s(p,[["render",t]]);export{d as __pageData,B as default};
