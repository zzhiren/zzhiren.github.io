import{_ as e,o as a,c as t,a as i}from"./app.09b4d0c2.js";const g=JSON.parse('{"title":"接口：Pinia","description":"","frontmatter":{"sidebar":"auto","editLinks":false,"sidebarDepth":3},"headers":[{"level":2,"title":"层次结构","slug":"hierarchy","link":"#hierarchy","children":[]},{"level":2,"title":"属性","slug":"属性","link":"#属性","children":[{"level":3,"title":"安装","slug":"install","link":"#install","children":[]},{"level":3,"title":"state","slug":"state","link":"#state","children":[]}]},{"level":2,"title":"方法","slug":"methods","link":"#methods","children":[{"level":3,"title":"use","slug":"use","link":"#use","children":[]}]}],"relativePath":"zh/api/interfaces/pinia.Pinia.md"}'),d={name:"zh/api/interfaces/pinia.Pinia.md"},n=i('<p><a href="./../">API 文档</a> / <a href="./../modules/pinia.html">pinia</a> / Pinia</p><h1 id="interface-pinia" tabindex="-1">接口：Pinia <a class="header-anchor" href="#interface-pinia" aria-hidden="true">#</a></h1><p><a href="./../modules/pinia.html">pinia</a>.Pinia</p><p>Every application must own its own pinia to be able to create stores</p><h2 id="hierarchy" tabindex="-1">层次结构 <a class="header-anchor" href="#hierarchy" aria-hidden="true">#</a></h2><ul><li><p><strong><code>Pinia</code></strong></p><p>↳ <a href="./pinia_testing.TestingPinia.html"><code>TestingPinia</code></a></p></li></ul><h2 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-hidden="true">#</a></h2><h3 id="install" tabindex="-1">安装 <a class="header-anchor" href="#install" aria-hidden="true">#</a></h3><p>• <strong>install</strong>: (<code>app</code>: <code>App</code>&lt;<code>any</code>&gt;) =&gt; <code>void</code></p><h4 id="type-declaration" tabindex="-1">类型声明 <a class="header-anchor" href="#type-declaration" aria-hidden="true">#</a></h4><p>▸ (<code>app</code>): <code>void</code></p><h5 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-hidden="true">#</a></h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>app</code></td><td style="text-align:left;"><code>App</code>&lt;<code>any</code>&gt;</td></tr></tbody></table><h5 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-hidden="true">#</a></h5><p><code>void</code></p><hr><h3 id="state" tabindex="-1">state <a class="header-anchor" href="#state" aria-hidden="true">#</a></h3><p>• <strong>state</strong>: <code>Ref</code>&lt;<code>Record</code>&lt;<code>string</code>, <a href="./../modules/pinia.html#statetree"><code>StateTree</code></a>&gt;&gt;</p><p>根 state</p><h2 id="methods" tabindex="-1">方法 <a class="header-anchor" href="#methods" aria-hidden="true">#</a></h2><h3 id="use" tabindex="-1">use <a class="header-anchor" href="#use" aria-hidden="true">#</a></h3><p>▸ <strong>use</strong>(<code>plugin</code>): <a href="./pinia.Pinia.html"><code>Pinia</code></a></p><p>添加 store 插件来扩展每一个 store</p><h4 id="paramters" tabindex="-1">参数 <a class="header-anchor" href="#paramters" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>plugin</code></td><td style="text-align:left;"><a href="./pinia.PiniaPlugin.html"><code>PiniaPlugin</code></a></td><td style="text-align:left;">store plugin to add</td></tr></tbody></table><h4 id="返回值-1" tabindex="-1">返回值 <a class="header-anchor" href="#返回值-1" aria-hidden="true">#</a></h4><p><a href="./pinia.Pinia.html"><code>Pinia</code></a></p>',27),r=[n];function h(l,s,o,c,p,f){return a(),t("div",null,r)}const _=e(d,[["render",h]]);export{g as __pageData,_ as default};
