import{_ as e,o as t,c as a,a as i}from"./app.09b4d0c2.js";const _=JSON.parse('{"title":"Interface: DefineStoreOptionsBase<S, Store>","description":"","frontmatter":{"editLink":false},"headers":[{"level":2,"title":"Type parameters","slug":"type-parameters","link":"#type-parameters","children":[]},{"level":2,"title":"Hierarchy","slug":"hierarchy","link":"#hierarchy","children":[]}],"relativePath":"api/interfaces/pinia.DefineStoreOptionsBase.md"}'),r={name:"api/interfaces/pinia.DefineStoreOptionsBase.md"},o=i('<p><a href="./../">API Documentation</a> / <a href="./../modules/pinia.html">pinia</a> / DefineStoreOptionsBase</p><h1 id="interface-definestoreoptionsbase-s-store" tabindex="-1">Interface: DefineStoreOptionsBase&lt;S, Store&gt; <a class="header-anchor" href="#interface-definestoreoptionsbase-s-store" aria-hidden="true">#</a></h1><p><a href="./../modules/pinia.html">pinia</a>.DefineStoreOptionsBase</p><p>Options passed to <code>defineStore()</code> that are common between option and setup stores. Extend this interface if you want to add custom options to both kinds of stores.</p><h2 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a></h2><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>S</code></td><td style="text-align:left;">extends <a href="./../modules/pinia.html#StateTree"><code>StateTree</code></a></td></tr><tr><td style="text-align:left;"><code>Store</code></td><td style="text-align:left;"><code>Store</code></td></tr></tbody></table><h2 id="hierarchy" tabindex="-1">Hierarchy <a class="header-anchor" href="#hierarchy" aria-hidden="true">#</a></h2><ul><li><p><strong><code>DefineStoreOptionsBase</code></strong></p><p>↳ <a href="./pinia.DefineStoreOptions.html"><code>DefineStoreOptions</code></a></p><p>↳ <a href="./pinia.DefineSetupStoreOptions.html"><code>DefineSetupStoreOptions</code></a></p></li></ul>',8),n=[o];function s(d,p,c,l,h,f){return t(),a("div",null,n)}const m=e(r,[["render",s]]);export{_ as __pageData,m as default};
